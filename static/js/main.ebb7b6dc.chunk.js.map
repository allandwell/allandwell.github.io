{"version":3,"sources":["icons/icons8-menu.svg","icons/icons8-google.svg","icons/icons8-amazon.svg","icons/icons8-trash.svg","types.ts","api/axios.ts","api/user.ts","redux/actions/user.ts","api/product.ts","redux/actions/product.ts","components/Header/index.tsx","components/Footer/index.tsx","components/ProductCard/index.tsx","components/ProductList/index.tsx","components/Carousel/index.tsx","pages/Home/index.tsx","api/auth.ts","redux/actions/auth.ts","components/LoginForm/validate.ts","components/LoginForm/index.tsx","components/RegisterForm/validate.ts","components/RegisterForm/index.tsx","pages/Auth/index.tsx","components/ForgotPasswordForm/index.tsx","pages/ForgotPassword/index.tsx","components/ResetPasswordForm/index.tsx","pages/ResetPassword/index.tsx","pages/Callback/index.tsx","components/EmptyCart/index.tsx","redux/actions/local.ts","localStorage/index.tsx","components/CartItem/index.tsx","components/CheckoutSidebar/index.tsx","pages/Cart/index.tsx","pages/Product/index.tsx","components/AddProductForm/validate.ts","components/UpdateProductForm/index.tsx","pages/UpdateProduct/index.tsx","components/UserAccountNavigation/index.tsx","components/UserDataForm/index.tsx","components/UpdatePasswordForm/index.tsx","pages/UserProfile/index.tsx","components/AddProductForm/index.tsx","pages/AddProduct/index.tsx","Routes.tsx","App.tsx","serviceWorker.ts","redux/reducers/product.ts","redux/reducers/ui.ts","redux/reducers/auth.ts","redux/reducers/local.ts","redux/reducers/index.ts","redux/sagas/product.ts","redux/sagas/ui.ts","redux/sagas/index.ts","redux/store.ts","index.tsx"],"names":["module","exports","DialogType","token","localStorage","getItem","axios","defaults","timeout","baseURL","interceptors","request","use","config","headers","err","Promise","reject","baseUrl","getUserWithItemsInCart","userId","a","get","withCredentials","updateProfile","email","firstName","lastName","patch","updatePassword","oldPassword","newPassword","addItemToCart","productId","removeItemFromCart","decreaseProductQuantityFromCart","updateUserProfile","dispatch","response","type","payload","user","data","console","log","updateUserPassword","userAddItemToCart","userRemoveItemFromCart","getUserWithItemsPopulate","fetchAllProducts","res","findProductByCategory","productCategory","createProduct","name","price","images","affiliateurl","asin","description","category","variants","size","post","updateProduct","deleteProduct","delete","fetchProducts","products","fetchProductsByCategorySuccess","adminCreateProduct","product","adminUpdateProduct","Header","useState","searchTerm","setSearchTerm","isNavOpen","setIsNavOpen","useDispatch","useSelector","state","auth","setItem","itemsInCartLocal","local","itemsInCart","numberOfItemsInCartLocal","forEach","item","quantity","isLoggedIn","numberOfItemsInCart","google","username","className","href","to","activeClassName","onClick","placeholder","onChange","event","target","value","filteredProducts","filter","toLowerCase","includes","fetchProductsByNameSuccess","src","hambugerMenu","alt","Footer","icon","faInstagram","aria-hidden","faFacebook","faLinkedinIn","ProductCard","props","_id","ProductList","history","useHistory","items","titleRef","useRef","useEffect","location","pathname","current","scrollIntoView","behavior","ref","map","key","Carousel","autoPlay","autoPlayInterval","responsive","500","800","1024","disableButtonsControls","infinite","img","index","Home","title","Helmet","register","password","login","logout","isAuthenticated","requestForgotPassword","resetPassword","userLogin","status","userRequestForgotPassword","userResetPassword","LoginSchema","Yup","shape","min","max","required","LoginForm","push","initialValues","validationSchema","onSubmit","values","setSubmitting","errors","touched","id","AmazonLogo","GoogleLogo","RegisterSchema","RegisterForm","userRegister","htmlFor","Auth","setLogin","handleAuthToggle","validateEmail","error","test","ForgotPasswordForm","resetForm","alert","isValidating","validate","ForgotPassword","ResetPasswordSchema","ResetPasswordForm","ResetPassword","useParams","Callback","EmptyCart","getAllItemsFromLocalStorage","allItemsInCart","serializedItems","JSON","parse","saveItemToLocalStorage","cartCopy","itemAdded","find","itemAddedIndex","findIndex","stringCart","stringify","deleteItemFromLocalStorage","splice","CartItem","cartItem","aria-label","decreaseItemQuantityFromLocalStorage","trashIcon","CheckoutSidebar","totalPrice","toFixed","url","document","createElement","setAttribute","body","appendChild","click","openwin","Cart","totalPriceOfAllItemsInCartLocal","totalPriceOfAllItemsInCart","length","Product","isAdmin","goBack","faLongArrowAltLeft","arial-label","variant","rel","adminDeleteProduct","AddProductSchema","productName","of","UpdateProductForm","isSubmitting","insert","remove","image","disabled","UpdateProduct","UserAccountNavigation","UserDataSchema","UserDataForm","UpdatePasswordSchema","UpdatePasswordForm","UserProfile","AddProductForm","AddProduct","Routes","basename","exact","path","render","component","App","StylesProvider","injectFirst","Boolean","window","hostname","match","action","copyItems","filterItems","p","defaultState","dialogOpen","ui","dialog","createRootReducer","combineReducers","doSomethingWhenGettingProduct","takeLatest","doSomethingWhenDialogOpen","rootSaga","all","productSagas","uiSagas","initState","store","initialState","sagaMiddleware","createSagaMiddleware","middlewares","thunk","composeEnhancers","compose","createStore","applyMiddleware","run","makeStore","WithProvider","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ebb7b6dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icons8-menu.9eaf7808.svg\";","module.exports = __webpack_public_path__ + \"static/media/icons8-google.88161621.svg\";","module.exports = __webpack_public_path__ + \"static/media/icons8-amazon.04888aca.svg\";","module.exports = __webpack_public_path__ + \"static/media/icons8-trash.be76b3b2.svg\";","// Action types\n/**\n * User authentication actions\n */\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nexport const REGISTER_FAILURE = 'REGISTER_FAIL'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'\nexport const AUTHENTICATE_SUCCESS = 'AUTHENTICATE_SUCCESS'\nexport const AUTHENTICATE_FAILURE = 'AUTHENTICATE_FAILURE'\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nexport const UPATE_PROFILE_SUCCESS = 'UPATE_PROFILE_SUCCESS'\nexport const UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS'\nexport const ADD_ITEM_TO_CART_SUCCESS = 'ADD_ITEM_TO_CART_SUCCESS'\nexport const REMOVE_ITEM_FROM_CART_SUCCESS = 'REMOVE_ITEM_FROM_CART_SUCCESS'\nexport const DECREASE_ITEM_QUANTITY_FROM_CART_SUCCESS =\n  'DECREASE_ITEM_QUANTITY_FROM_CART_SUCCESS'\nexport const GET_USER_WITH_ITEMS_POPULATE_SUCCESS =\n  'GET_USER_WITH_ITEM_POPULATE_SUCCESS'\nexport const REQUEST_FORGOT_PASSWORD_SUCCESS = 'REQUEST_FORGOT_PASSWORD_SUCCESS'\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS'\n/**\n * Product actions\n */\nexport const GET_ALL_PRODUCTS = 'GET_ALL_PRODUCTS'\nexport const GET_ALL_PRODUCTS_BY_NAME_SUCCESS =\n  'GET_ALL_PRODUCTS_BY_NAME_SUCCESS'\nexport const FIND_PRODUCT_BY_CATEGORY_SUCCESS =\n  'FIND_PRODUCT_BY_CATEGORY_SUCCESS'\nexport const CREATE_PRODUCT_SUCCESS = 'CREATE_PRODUCT_SUCCESS'\nexport const UPDATE_PRODUCT_SUCCESS = 'UPDATE_PRODUCT_SUCCESS'\nexport const DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS'\nexport const TOGGLE_DIALOG = 'TOGGLE_DIALOG'\n/**\n * Local actions\n */\nexport const GET_ALL_ITEMS_FROM_CART_LOCAL = 'GET_ALL_ITEMS_FROM_CART_LOCAL'\n\n// Enum\nexport enum DialogType {\n  SignIn = 'signIn',\n  SignUp = 'signUp',\n}\n\nexport type Google = {\n  id: string\n  token: string\n  name: string\n}\nexport type ItemInCart = {\n  product: Product\n  quantity: number\n}\n/**\n *  --------------PRODUCT --------------\n */\n\nexport type Product = {\n  _id: string\n  name: string\n  price: number\n  images: string[]\n  affiliateurl?: string\n  asin: string\n  description?: string\n  category: string\n  variants?: string[]\n  // sizes: string[] | number[]\n  size: string | number\n  orderBy?: User\n}\nexport type GetAllProductAction = {\n  type: typeof GET_ALL_PRODUCTS\n  payload: {\n    products: Product[]\n  }\n}\nexport type GetAllProductsByNameSuccessAction = {\n  type: typeof GET_ALL_PRODUCTS_BY_NAME_SUCCESS\n  payload: {\n    products: Product[]\n  }\n}\nexport type FindProductByCategorySuccessAction = {\n  type: typeof FIND_PRODUCT_BY_CATEGORY_SUCCESS\n  payload: {\n    products: Product[]\n  }\n}\n\nexport type CreateProductSuccessAction = {\n  type: typeof CREATE_PRODUCT_SUCCESS\n  payload: {\n    product: Product\n  }\n}\nexport type UpdateProductSuccessAction = {\n  type: typeof UPDATE_PRODUCT_SUCCESS\n  payload: {\n    product: Product\n  }\n}\nexport type DeleteProductSuccessAction = {\n  type: typeof DELETE_PRODUCT_SUCCESS\n  payload: {\n    product: Product\n  }\n}\n\n// Use this union in reducer\nexport type ProductActions =\n  | GetAllProductAction\n  | GetAllProductsByNameSuccessAction\n  | FindProductByCategorySuccessAction\n  | CreateProductSuccessAction\n  | UpdateProductSuccessAction\n  | DeleteProductSuccessAction\n\nexport type ProductState = {\n  items: Product[]\n}\n\nexport type ToggleDialogAction = {\n  type: typeof TOGGLE_DIALOG\n  payload: {\n    dialog: DialogType\n  }\n}\n/**\n *  -------------USER--------------------\n */\nexport type User = {\n  _id: string\n  username: string\n  firstName?: string\n  lastName?: string\n  email: string\n  password: string\n  avatar?: string\n  google?: Google\n  isAdmin?: boolean\n  isBan?: boolean\n  token?: string\n  itemsInCart?: ItemInCart[]\n}\nexport type AuthState = {\n  isLoggedIn: boolean\n  user: User | null\n  error: string | null\n}\nexport type RegisterSuccess = {\n  type: typeof REGISTER_SUCCESS\n  payload: {\n    user: User\n  }\n}\nexport type RegisterFailure = {\n  type: typeof REGISTER_FAILURE\n  payload: {\n    error: string\n  }\n}\nexport type LoginSuccess = {\n  type: typeof LOGIN_SUCCESS\n  payload: {\n    user: User\n  }\n}\nexport type LoginFailure = {\n  type: typeof LOGIN_FAILURE\n  payload: {\n    error: string\n  }\n}\nexport type AuthenticateSuccess = {\n  type: typeof AUTHENTICATE_SUCCESS\n  payload: {\n    user: User\n  }\n}\nexport type AuthenticateFailure = {\n  type: typeof AUTHENTICATE_FAILURE\n  payload: {\n    error: string\n  }\n}\nexport type LogoutSuccess = {\n  type: typeof LOGOUT_SUCCESS\n}\nexport type UpdateProfileSuccess = {\n  type: typeof UPATE_PROFILE_SUCCESS\n  payload: {\n    user: User\n  }\n}\nexport type AddItemToCartSuccessAction = {\n  type: typeof ADD_ITEM_TO_CART_SUCCESS\n  payload: {\n    user: User\n  }\n}\nexport type RemoveItemFromCartSuccessAction = {\n  type: typeof REMOVE_ITEM_FROM_CART_SUCCESS\n  payload: {\n    user: User\n  }\n}\nexport type DecreaseItemQuantityFromCartSuccessAction = {\n  type: typeof DECREASE_ITEM_QUANTITY_FROM_CART_SUCCESS\n  payload: {\n    user: User\n  }\n}\nexport type UpdatePasswordSuccess = {\n  type: typeof UPDATE_PASSWORD_SUCCESS\n}\nexport type RequestForgotPasswordSuccess = {\n  type: typeof REQUEST_FORGOT_PASSWORD_SUCCESS\n}\nexport type ResetPasswordSuccess = {\n  type: typeof RESET_PASSWORD_SUCCESS\n}\nexport type GetUserWithItemsPopulateSuccess = {\n  type: typeof GET_USER_WITH_ITEMS_POPULATE_SUCCESS\n  payload: {\n    user: User\n  }\n}\n// Use this union in reducer\nexport type UserActions =\n  | RegisterSuccess\n  | RegisterFailure\n  | LoginSuccess\n  | LoginFailure\n  | AuthenticateSuccess\n  | AuthenticateFailure\n  | LogoutSuccess\n  | UpdateProfileSuccess\n  | UpdatePasswordSuccess\n  | RequestForgotPasswordSuccess\n  | ResetPasswordSuccess\n  | AddItemToCartSuccessAction\n  | DecreaseItemQuantityFromCartSuccessAction\n  | RemoveItemFromCartSuccessAction\n  | GetUserWithItemsPopulateSuccess\n\n/**\n * -----------------UI----------------\n */\nexport type UiActions = ToggleDialogAction\n\n// Using dynamic keys from an enum\nexport type UiState = {\n  dialogOpen: {\n    [key in DialogType]?: boolean\n  }\n}\n\n/**\n *  --------------LOCAL --------------\n */\nexport type GetAllItemsFromCartLocalAction = {\n  type: typeof GET_ALL_ITEMS_FROM_CART_LOCAL\n  payload: {\n    itemsInCart: ItemInCart[]\n  }\n}\n\nexport type LocalActions = GetAllItemsFromCartLocalAction\n\nexport type LocalState = {\n  itemsInCart: ItemInCart[]\n}\n\nexport type AppState = {\n  local: LocalState\n  auth: AuthState\n  product: ProductState\n  ui: UiState\n}\n","import axios from 'axios'\r\n// 这里自己获取token\r\nvar token=localStorage.getItem('token')\r\n\r\n// axios 配置\r\naxios.defaults.timeout = 1 * 60 * 1000;\r\naxios.defaults.baseURL = '/';\r\n\r\n// http request 拦截器\r\naxios.interceptors.request.use(\r\n  config => {\r\n    if (token) {  \r\n      // 判断是否存在token，如果存在的话，则每个http header都加上token\r\n      config.headers.token = `${token}`; // 根据实际情况自行修改\r\n    }\r\n    return config;\r\n  },\r\n  err => {\r\n    return Promise.reject(err);\r\n  }\r\n);\r\nexport default axios;","import axios from './axios'\n\nconst baseUrl =\n  process.env.NODE_ENV === 'development'\n    ? 'https://2035.site/api/v1'\n    : 'https://2035.site/api/v1'\n\nconst getUserWithItemsInCart = async (userId: string) => {\n  try {\n    return await axios.get(baseUrl + `/users/itemsInCart/${userId}`, {\n      withCredentials: true,\n    })\n  } catch (error) {\n    return error\n  }\n}\n\nconst updateProfile = async (\n  userId: string,\n  email: string,\n  firstName?: string,\n  lastName?: string\n) => {\n  try {\n    return await axios.patch(\n      baseUrl + `/users/${userId}`,\n      {\n        email,\n        firstName,\n        lastName,\n      },\n      { withCredentials: true }\n    )\n  } catch (error) {\n    return error\n  }\n}\n\nconst updatePassword = async (\n  userId: string,\n  oldPassword: string,\n  newPassword?: string\n) => {\n  try {\n    return await axios.patch(\n      baseUrl + `/users/change-password/${userId}`,\n      {\n        oldPassword,\n        newPassword,\n      },\n      { withCredentials: true }\n    )\n  } catch (error) {\n    return error\n  }\n}\n\nconst addItemToCart = async (userId: string, productId: string) => {\n  try {\n    return await axios.patch(\n      baseUrl + `/users/addToCart/${userId}`,\n      {\n        productId,\n      },\n      { withCredentials: true }\n    )\n  } catch (error) {\n    return error\n  }\n}\n\nconst removeItemFromCart = async (userId: string, productId: string) => {\n  try {\n    return await axios.patch(\n      baseUrl + `/users/removeFromCart/${userId}`,\n      {\n        productId,\n      },\n      { withCredentials: true }\n    )\n  } catch (error) {\n    return error\n  }\n}\n\nconst decreaseProductQuantityFromCart = async (\n  userId: string,\n  productId: string\n) => {\n  try {\n    return await axios.patch(\n      baseUrl + `/users/decreaseProductQuantityFromCart/${userId}`,\n      {\n        productId,\n      },\n      { withCredentials: true }\n    )\n  } catch (error) {\n    return error\n  }\n}\n\nexport {\n  updateProfile,\n  updatePassword,\n  addItemToCart,\n  decreaseProductQuantityFromCart,\n  removeItemFromCart,\n  getUserWithItemsInCart,\n}\n","import { Dispatch } from 'redux'\r\n\r\nimport {\r\n  User,\r\n  UserActions,\r\n  UPATE_PROFILE_SUCCESS,\r\n  UPDATE_PASSWORD_SUCCESS,\r\n  ADD_ITEM_TO_CART_SUCCESS,\r\n  REMOVE_ITEM_FROM_CART_SUCCESS,\r\n  DECREASE_ITEM_QUANTITY_FROM_CART_SUCCESS,\r\n  GET_USER_WITH_ITEMS_POPULATE_SUCCESS,\r\n} from '../../types'\r\nimport {\r\n  updateProfile,\r\n  updatePassword,\r\n  addItemToCart,\r\n  decreaseProductQuantityFromCart,\r\n  removeItemFromCart,\r\n  getUserWithItemsInCart,\r\n} from '../../api/user'\r\n\r\nexport function updateProfileSuccess(user: User): UserActions {\r\n  return {\r\n    type: UPATE_PROFILE_SUCCESS,\r\n    payload: {\r\n      user,\r\n    },\r\n  }\r\n}\r\n\r\nexport function updatePasswordSuccess(): UserActions {\r\n  return {\r\n    type: UPDATE_PASSWORD_SUCCESS,\r\n  }\r\n}\r\n\r\nexport function addItemtoCartSuccess(user: User): UserActions {\r\n  return {\r\n    type: ADD_ITEM_TO_CART_SUCCESS,\r\n    payload: {\r\n      user,\r\n    },\r\n  }\r\n}\r\nexport function removeItemFromCartSuccess(user: User): UserActions {\r\n  return {\r\n    type: REMOVE_ITEM_FROM_CART_SUCCESS,\r\n    payload: {\r\n      user,\r\n    },\r\n  }\r\n}\r\nexport function decreaseProductQuantityFromCartSuccess(\r\n  user: User\r\n): UserActions {\r\n  return {\r\n    type: DECREASE_ITEM_QUANTITY_FROM_CART_SUCCESS,\r\n    payload: {\r\n      user,\r\n    },\r\n  }\r\n}\r\nexport function getUserWithItemsPopulateSuccess(user: User): UserActions {\r\n  return {\r\n    type: GET_USER_WITH_ITEMS_POPULATE_SUCCESS,\r\n    payload: {\r\n      user,\r\n    },\r\n  }\r\n}\r\n// Async action processed by redux-thunk middleware\r\nexport function updateUserProfile(\r\n  userId: string,\r\n  email: string,\r\n  firstName?: string,\r\n  lastName?: string\r\n) {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n      const response = await updateProfile(userId, email, firstName, lastName)\r\n      // handle success\r\n      dispatch(updateProfileSuccess(response.data))\r\n    } catch (error) {\r\n      // handle error\r\n      console.log(error)\r\n      return error\r\n    }\r\n  }\r\n}\r\nexport function updateUserPassword(\r\n  userId: string,\r\n  oldPassword: string,\r\n  newPassword: string\r\n) {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n      await updatePassword(userId, oldPassword, newPassword)\r\n      dispatch(updatePasswordSuccess())\r\n    } catch (error) {\r\n      // handle error\r\n      console.log(error)\r\n      return error\r\n    }\r\n  }\r\n}\r\nexport function userAddItemToCart(userId: string, productId: string) {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n      const response = await addItemToCart(userId, productId)\r\n      dispatch(addItemtoCartSuccess(response.data))\r\n    } catch (error) {\r\n      // handle error\r\n      console.log(error)\r\n      return error\r\n    }\r\n  }\r\n}\r\nexport function userRemoveItemFromCart(userId: string, productId: string) {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n      const response = await removeItemFromCart(userId, productId)\r\n      dispatch(removeItemFromCartSuccess(response.data))\r\n    } catch (error) {\r\n      // handle error\r\n      console.log(error)\r\n      return error\r\n    }\r\n  }\r\n}\r\nexport function userDecreaseItemQuantityFromCart(\r\n  userId: string,\r\n  productId: string\r\n) {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n      const response = await decreaseProductQuantityFromCart(userId, productId)\r\n      dispatch(decreaseProductQuantityFromCartSuccess(response.data))\r\n    } catch (error) {\r\n      // handle error\r\n      console.log(error)\r\n      return error\r\n    }\r\n  }\r\n}\r\n\r\nexport function getUserWithItemsPopulate(userId: string) {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n      const response = await getUserWithItemsInCart(userId)\r\n      dispatch(getUserWithItemsPopulateSuccess(response.data))\r\n    } catch (error) {\r\n      // handle error\r\n      console.log(error)\r\n      return error\r\n    }\r\n  }\r\n}\r\n","import axios from './axios'\n\nconst baseUrl =\n  process.env.NODE_ENV === 'development'\n    ? 'https://2035.site/api/v1'\n    : 'https://2035.site/api/v1'\n\nvar token = localStorage.getItem('token')\nconsole.log(token)\n\nconst fetchAllProducts = async () => {\n  try {\n    const res = await axios.get(`${baseUrl}/products/`, {\n      withCredentials: true,\n    })\n    return res\n  } catch (error) {\n    return error\n  }\n}\nconst findProductByCategory = async (productCategory: string) => {\n  try {\n    const res = await axios.get(\n      `${baseUrl}/products/findByCategory/${productCategory}`,\n      {\n        withCredentials: true,\n      }\n    )\n    return res\n  } catch (error) {\n    return error\n  }\n}\n\nconst createProduct = async (\n  name: string,\n  price: number,\n  images: string[],\n  affiliateurl: string,\n  asin: string,\n  description: string,\n  category: string,\n  variants: string[],\n  size: string | number\n) => {\n  try {\n    return await axios.post(\n      baseUrl + '/products/',\n      {\n        name,\n        price,\n        images,\n        affiliateurl,\n        asin,\n        description,\n        category,\n        variants,\n        size,\n      },\n      { withCredentials: true }\n    )\n  } catch (error) {\n    return error\n  }\n}\n\nconst updateProduct = async (\n  productId: string,\n  name: string,\n  price: number,\n  images: string[],\n  affiliateurl: string,\n  asin: string,\n  description: string,\n  category: string,\n  variants: string[],\n  size: string | number\n) => {\n  try {\n    return await axios.patch(\n      baseUrl + `/products/${productId}`,\n      {\n        name,\n        price,\n        images,\n        affiliateurl,\n        asin,\n        description,\n        category,\n        variants,\n        size,\n      },\n      { withCredentials: true }\n    )\n  } catch (error) {\n    return error\n  }\n}\n\nconst deleteProduct = async (productId: string) => {\n  try {\n    return await axios.delete(baseUrl + `/products/${productId}`, {\n      withCredentials: true,\n    })\n  } catch (error) {\n    return error\n  }\n}\n\nexport {\n  fetchAllProducts,\n  createProduct,\n  findProductByCategory,\n  updateProduct,\n  deleteProduct,\n}\n","import { Dispatch } from 'redux'\n\nimport {\n  GET_ALL_PRODUCTS,\n  GET_ALL_PRODUCTS_BY_NAME_SUCCESS,\n  FIND_PRODUCT_BY_CATEGORY_SUCCESS,\n  CREATE_PRODUCT_SUCCESS,\n  UPDATE_PRODUCT_SUCCESS,\n  DELETE_PRODUCT_SUCCESS,\n  ProductActions,\n  Product,\n} from '../../types'\nimport {\n  fetchAllProducts,\n  findProductByCategory,\n  createProduct,\n  deleteProduct,\n  updateProduct,\n} from '../../api/product'\n\nexport function getAllProducts(products: Product[]): ProductActions {\n  return {\n    type: GET_ALL_PRODUCTS,\n    payload: {\n      products,\n    },\n  }\n}\n\nexport function getAllProductsByNameSuccess(\n  products: Product[]\n): ProductActions {\n  return {\n    type: GET_ALL_PRODUCTS_BY_NAME_SUCCESS,\n    payload: {\n      products,\n    },\n  }\n}\n\nexport function findProductByCategorySuccess(\n  products: Product[]\n): ProductActions {\n  return {\n    type: FIND_PRODUCT_BY_CATEGORY_SUCCESS,\n    payload: {\n      products,\n    },\n  }\n}\n\nexport function createProductSuccess(product: Product): ProductActions {\n  return {\n    type: CREATE_PRODUCT_SUCCESS,\n    payload: {\n      product,\n    },\n  }\n}\n\nexport function updateProductSuccess(product: Product): ProductActions {\n  return {\n    type: UPDATE_PRODUCT_SUCCESS,\n    payload: {\n      product,\n    },\n  }\n}\n\nexport function deleteProductSuccess(product: Product): ProductActions {\n  return {\n    type: DELETE_PRODUCT_SUCCESS,\n    payload: {\n      product,\n    },\n  }\n}\n\n// Async action processed by redux-thunk middleware\nexport function fetchProducts() {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await fetchAllProducts()\n      // handle success\n      dispatch(getAllProducts(response.data))\n    } catch (error) {\n      // handle error\n      console.log(error)\n      return error\n    }\n  }\n}\nexport function fetchProductsByNameSuccess(searchTerm: string) {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await fetchAllProducts()\n      if (response && searchTerm) {\n        const filteredProducts = response.data.filter((product: Product) =>\n          product.name.toLowerCase().includes(searchTerm.toLowerCase())\n        )\n        dispatch(getAllProductsByNameSuccess(filteredProducts))\n      }\n    } catch (error) {\n      // handle error\n      console.log(error)\n      return error\n    }\n  }\n}\n\nexport function fetchProductsByCategorySuccess(productCategory: string) {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await findProductByCategory(productCategory)\n      // handle success\n      dispatch(findProductByCategorySuccess(response.data))\n    } catch (error) {\n      // handle error\n      console.log(error)\n      return error\n    }\n  }\n}\n\nexport function adminCreateProduct(\n  name: string,\n  price: number,\n  images: string[],\n  affiliateurl: string,\n  asin: string,\n  description: string,\n  category: string,\n  variants: string[],\n  size: string | number\n) {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await createProduct(\n        name,\n        price,\n        images,\n        affiliateurl,\n        asin,\n        description,\n        category,\n        variants,\n        size\n      )\n      // handle success\n      dispatch(createProductSuccess(response.data))\n    } catch (error) {\n      // handle error\n      console.log(error)\n      return error\n    }\n  }\n}\n\nexport function adminUpdateProduct(\n  productId: string,\n  name: string,\n  price: number,\n  images: string[],\n  affiliateurl: string,\n  asin: string,\n  description: string,\n  category: string,\n  variants: string[],\n  size: string | number\n) {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await updateProduct(\n        productId,\n        name,\n        price,\n        images,\n        affiliateurl,\n        asin,\n        description,\n        category,\n        variants,\n        size\n      )\n      // handle success\n      dispatch(updateProductSuccess(response.data))\n    } catch (error) {\n      // handle error\n      console.log(error)\n      return error\n    }\n  }\n}\n\nexport function adminDeleteProduct(productId: string) {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await deleteProduct(productId)\n      // handle success\n      dispatch(deleteProductSuccess(response.data))\n    } catch (error) {\n      // handle error\n      console.log(error)\n      return error\n    }\n  }\n}\n","import React, { useState } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { AppState } from '../../types'\nimport { getUserWithItemsPopulate } from '../../redux/actions/user'\nimport {\n  fetchProducts,\n  fetchProductsByNameSuccess,\n  fetchProductsByCategorySuccess,\n} from '../../redux/actions/product'\nimport shoppingCart from '../../icons/shopping-cart.svg'\nimport userProfile from '../../icons/user-profile.svg'\nimport hambugerMenu from '../../icons/icons8-menu.svg'\nimport './header.scss'\n\nconst Header = () => {\n  const baseUrl =\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:3001/'\n      : 'http://allandwell.com/'\n  const [searchTerm, setSearchTerm] = useState('')\n  // the state of the mobile nav bar\n  const [isNavOpen, setIsNavOpen] = useState(false)\n  const dispatch = useDispatch()\n  const user = useSelector((state: AppState) => state.auth.user)\n\n  if (typeof user?.token != 'undefined') {\n    localStorage.setItem('token', user?.token)\n  }\n\n  const itemsInCartLocal = useSelector(\n    (state: AppState) => state.local.itemsInCart\n  )\n  let numberOfItemsInCartLocal = 0\n  if (itemsInCartLocal) {\n    itemsInCartLocal.forEach(\n      (item) => (numberOfItemsInCartLocal += item.quantity)\n    )\n  }\n  const isLoggedIn = useSelector((state: AppState) => state.auth.isLoggedIn)\n  let itemsInCart = user?.itemsInCart\n  let numberOfItemsInCart = 0\n  if (user?.itemsInCart) {\n    user?.itemsInCart?.forEach((item) => (numberOfItemsInCart += item.quantity))\n  }\n  const username = user?.google\n    ? user.google.name\n    : user?.username\n      ? user.username\n      : 'account'\n\n  // if user logged in, populate items in cart of that user\n  const handleCartClick = () => {\n    if (user) {\n      dispatch(getUserWithItemsPopulate(user._id))\n    }\n  }\n  const handleClickNewIn = () => {\n    dispatch(fetchProducts())\n    setIsNavOpen(!isNavOpen)\n  }\n  const handleClickWomen = () => {\n    dispatch(fetchProductsByCategorySuccess('women'))\n    setIsNavOpen(!isNavOpen)\n  }\n  const handleClickMen = () => {\n    dispatch(fetchProductsByCategorySuccess('men'))\n    setIsNavOpen(!isNavOpen)\n  }\n  const handleClickKids = () => {\n    dispatch(fetchProductsByCategorySuccess('kids'))\n    setIsNavOpen(!isNavOpen)\n  }\n  // handle Input change\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(event.target.value)\n  }\n  const handleSearch = () => {\n    dispatch(fetchProductsByNameSuccess(searchTerm))\n  }\n  // handle the hamburger menu button click event\n  const handleMenuBtnClick = () => {\n    setIsNavOpen(!isNavOpen)\n  }\n  return (\n    <div className=\"header\">\n      <div className=\"header__title\">\n        <a href={baseUrl} >AllandWell</a>\n      </div>\n      <div className={`nav nav--${isNavOpen}`}>\n        <ul className=\"nav__list\">\n          <li className=\"nav__item\">\n            <NavLink\n              to=\"/newin\"\n              activeClassName=\"nav__item__link--active\"\n              onClick={handleClickNewIn}\n            >\n              NEW IN\n            </NavLink>\n          </li>\n          <li className=\"nav__item\">\n            <NavLink\n              to=\"/women\"\n              activeClassName=\"nav__item__link--active\"\n              onClick={handleClickWomen}\n            >\n              WOMEN\n            </NavLink>\n          </li>\n          <li className=\"nav__item\">\n            <NavLink\n              to=\"/men\"\n              activeClassName=\"nav__item__link--active\"\n              onClick={handleClickMen}\n            >\n              MEN\n            </NavLink>\n          </li>\n          <li className=\"nav__item\">\n            <NavLink\n              to=\"/kids\"\n              activeClassName=\"nav__item__link--active\"\n              onClick={handleClickKids}\n            >\n              KIDS\n            </NavLink>\n          </li>\n          <li className=\"nav__item\">\n            <Link to=\"#\">ABOUT US</Link>\n          </li>\n        </ul>\n      </div>\n      <div className=\"tool\">\n        <div className=\"tool__search-container\">\n          <input\n            type=\"text\"\n            placeholder=\"Search..\"\n            name=\"search\"\n            onChange={handleChange}\n          />\n          <button onClick={handleSearch}>\n            <div className=\"tool__search-container__text\">search</div>\n          </button>\n        </div>\n\n        {/* <Link\n          to={isLoggedIn ? `/user/${user?._id}` : '/auth'}\n          className=\"tool__link\"\n        >\n          <img\n            src={userProfile}\n            className=\"tool__link__img tool__link__img--user\"\n            alt=\"user icon\"\n          />\n          <div className=\"tool__link__text\">{username}</div>\n        </Link> */}\n\n        {/* <Link\n          to=\"/checkout/cart\"\n          className=\"tool__link\"\n          onClick={handleCartClick}\n        >\n          <span className=\"tool__link__badge\">\n            {isLoggedIn\n              ? itemsInCart\n                ? numberOfItemsInCart\n                : '0'\n              : numberOfItemsInCartLocal}\n          </span>\n          <img\n            src={shoppingCart}\n            className=\"tool__link__img\"\n            alt=\"shopping cart\"\n          />\n          <div className=\"tool__link__text\">cart</div>\n        </Link> */}\n        <button className=\"tool__button\" onClick={handleMenuBtnClick}>\n          <img src={hambugerMenu} className=\"tool__menu\" alt=\"Menu icon\" />\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport './footer.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faFacebook,\n  faLinkedinIn,\n  faInstagram,\n} from '@fortawesome/free-brands-svg-icons'\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <p className=\"footer__intro\">China</p>\n      <p className=\"footer__intro\">\n        © 2020 AllandWell <small>All rights reserved</small>\n      </p>\n      <ul className=\"footer__menu\">\n        <li className=\"footer__menu__icon\">\n          <FontAwesomeIcon icon={faInstagram} aria-hidden=\"true\" />\n        </li>\n        <li>\n          <FontAwesomeIcon icon={faFacebook} aria-hidden=\"true\" />\n        </li>\n        <li>\n          <FontAwesomeIcon icon={faLinkedinIn} aria-hidden=\"true\" />\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { Product } from '../../types'\nimport './productCard.scss'\n\ntype ProductCard = {\n  product: Product\n}\nfunction ProductCard(props: ProductCard) {\n  const { product } = props\n  return (\n    <article className=\"product__wrapper\">\n      <figure>\n        <Link to={`/products/${product._id}`}>\n          <img\n            className=\"product__photo\"\n            src={product.images[0]}\n            alt={product.name}\n          />\n        </Link>\n        <figcaption className=\"product__name\">{product.name}</figcaption>\n        <section>\n          <p className=\"product__price\">{product.price} $</p>\n        </section>\n      </figure>\n    </article>\n  )\n}\n\nexport default ProductCard\n","import React, { useEffect, useRef } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport ProductCard from '../ProductCard/index'\r\nimport {\r\n  fetchProducts,\r\n  fetchProductsByCategorySuccess,\r\n} from '../../redux/actions/product'\r\nimport { AppState } from '../../types'\r\nimport './productList.scss'\r\n\r\nconst ProductList = () => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const products = useSelector((state: AppState) => state.product.items)\r\n  const titleRef = useRef() as React.MutableRefObject<HTMLInputElement>\r\n  const scrollToRef = (ref: React.MutableRefObject<HTMLInputElement>) =>\r\n    ref.current.scrollIntoView({ behavior: 'smooth' })\r\n\r\n  useEffect(() => {\r\n    if (history.location.pathname === '/') {\r\n      dispatch(fetchProducts())\r\n    }\r\n    if (history.location.pathname === '/women') {\r\n      dispatch(fetchProductsByCategorySuccess('women'))\r\n    }\r\n    if (history.location.pathname === '/men') {\r\n      dispatch(fetchProductsByCategorySuccess('men'))\r\n    }\r\n    if (history.location.pathname === '/kids') {\r\n      dispatch(fetchProductsByCategorySuccess('kids'))\r\n    }\r\n    scrollToRef(titleRef)\r\n  }, [history.location.pathname, dispatch, titleRef])\r\n  return (\r\n    <>\r\n      <div className=\"product__list\" ref={titleRef}>\r\n        {products.map((product) => (\r\n          <ProductCard key={product._id} product={product} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductList\r\n","import React from 'react'\r\nimport AliceCarousel from 'react-alice-carousel'\r\nimport 'react-alice-carousel/lib/alice-carousel.css'\r\n\r\nimport './carousel.scss'\r\n\r\nexport default function Carousel() {\r\n  const intervalTime = 2000\r\n  const responsive = {\r\n    500: {\r\n      items: 1,\r\n    },\r\n    800: {\r\n      items: 2,\r\n    },\r\n    1024: {\r\n      items: 3,\r\n    },\r\n  }\r\n\r\n  const imgsArr = [\r\n    'https://images-na.ssl-images-amazon.com/images/I/61TEl0sEQgL._AC_UY879_.jpg',\r\n    'https://m.media-amazon.com/images/I/71xZPim-quL._AC_SY879._SX._UX._SY._UY_.jpg',\r\n    'https://images-na.ssl-images-amazon.com/images/I/61SAaXhoyiL._AC_UY879_.jpg'\r\n  ]\r\n  return (\r\n    <div>\r\n      <AliceCarousel\r\n        autoPlay\r\n        autoPlayInterval={intervalTime}\r\n        responsive={responsive}\r\n        disableButtonsControls={true}\r\n        infinite={true}\r\n      >\r\n        {imgsArr.map((img, index) => (\r\n          <img key={index} src={img} className=\"sliderimg\" alt=\"carousel-img\" />\r\n        ))}\r\n      </AliceCarousel>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nimport Header from '../../components/Header/index'\r\nimport Footer from '../../components/Footer/index'\r\nimport ProductList from '../../components/ProductList/index'\r\nimport Carousel from '../../components/Carousel/index'\r\nimport './home.scss'\r\n\r\ntype HomeProps = {\r\n  title: string\r\n}\r\nexport default function Home(props: HomeProps) {\r\n  const { title } = props\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{title ? title : 'AMOUR'}</title>\r\n      </Helmet>\r\n      <div className=\"home__wrapper\">\r\n        <Header />\r\n        <div className=\"home__content\">\r\n          <Carousel />\r\n          <ProductList />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import axios from './axios'\n\nconst baseUrl =\n  process.env.NODE_ENV === 'development'\n    ? 'https://2035.site/api/v1'\n    : 'https://2035.site/api/v1'\n\nconst register = async (\n  username: string,\n  email: string,\n  password: string,\n  firstName?: string,\n  lastName?: string\n) => {\n  try {\n    return await axios.post(\n      baseUrl + '/auth/register',\n      {\n        username,\n        email,\n        password,\n        firstName,\n        lastName,\n      },\n      { withCredentials: true }\n    )\n  } catch (error) {\n    return error\n  }\n}\n\nconst login = async (username: string, password: string) => {\n  try {\n    const response = await axios.post(\n      baseUrl + '/auth/login',\n      {\n        username,\n        password,\n      },\n      { withCredentials: true }\n    )\n    return response\n  } catch (error) {\n    return error\n  }\n}\n\nconst logout = async () => {\n  try {\n    const response = await axios.get(baseUrl + '/auth/logout', {\n      withCredentials: true,\n    })\n    return response\n  } catch (error) {\n    return error\n  }\n}\n\nconst isAuthenticated = async () => {\n  try {\n    const response = await axios.get(baseUrl + '/auth/isAuthenticated', {\n      withCredentials: true,\n    })\n    return response\n  } catch (error) {\n    return error\n  }\n}\n\nconst requestForgotPassword = async (email: string) => {\n  try {\n    const response = await axios.post(\n      baseUrl + '/auth/forgot-password',\n      {\n        email,\n      },\n      {\n        withCredentials: true,\n      }\n    )\n    return response\n  } catch (error) {\n    return error\n  }\n}\n\nconst resetPassword = async (password: string, token: string) => {\n  try {\n    const response = await axios.post(\n      baseUrl + `/auth/reset-password/${token}`,\n      {\n        password,\n      },\n      {\n        withCredentials: true,\n      }\n    )\n    return response\n  } catch (error) {\n    return error\n  }\n}\n\nexport {\n  register,\n  login,\n  logout,\n  isAuthenticated,\n  requestForgotPassword,\n  resetPassword,\n}\n","import { Dispatch } from 'redux'\n\nimport {\n  REGISTER_SUCCESS,\n  LOGIN_SUCCESS,\n  User,\n  UserActions,\n  AUTHENTICATE_SUCCESS,\n  AUTHENTICATE_FAILURE,\n  LOGOUT_SUCCESS,\n  REQUEST_FORGOT_PASSWORD_SUCCESS,\n  RESET_PASSWORD_SUCCESS,\n} from '../../types'\nimport {\n  register,\n  login,\n  isAuthenticated,\n  logout,\n  requestForgotPassword,\n  resetPassword,\n} from '../../api/auth'\n\nexport function registerSuccess(user: User): UserActions {\n  return {\n    type: REGISTER_SUCCESS,\n    payload: {\n      user,\n    },\n  }\n}\n\nexport function loginSuccess(user: User): UserActions {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: {\n      user,\n    },\n  }\n}\n\nexport function authenticateSuccessed(user: User): UserActions {\n  return {\n    type: AUTHENTICATE_SUCCESS,\n    payload: {\n      user,\n    },\n  }\n}\n\nexport function authenticateFailed(error: string): UserActions {\n  return {\n    type: AUTHENTICATE_FAILURE,\n    payload: {\n      error,\n    },\n  }\n}\n\nexport function logoutSuccess(): UserActions {\n  return {\n    type: LOGOUT_SUCCESS,\n  }\n}\n\nexport function requestForgotPasswordSuccess(): UserActions {\n  return {\n    type: REQUEST_FORGOT_PASSWORD_SUCCESS,\n  }\n}\nexport function resetPasswordSuccess(): UserActions {\n  return {\n    type: RESET_PASSWORD_SUCCESS,\n  }\n}\n// Async action processed by redux-thunk middleware\nexport function userRegister(\n  username: string,\n  email: string,\n  password: string,\n  firstName?: string,\n  lastName?: string\n) {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await register(\n        username,\n        email,\n        password,\n        firstName,\n        lastName\n      )\n      if (response.status === 200) {\n        // handle success\n        dispatch(registerSuccess(response.data))\n      }\n    } catch (error) {\n      // handle error\n      console.log(error)\n      return error\n    }\n  }\n}\n\nexport function userLogin(username: string, password: string) {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await login(username, password)\n      console.log(response)\n      console.log('logintest')\n      if (response.status === 200) {\n        // handle success\n        dispatch(loginSuccess(response.data))\n      }\n    } catch (error) {\n      // handle error\n      console.log('loginError', error)\n      return error\n    }\n  }\n}\n\nexport function userAuthenticate() {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await isAuthenticated()\n      if (response.data) {\n        // handle success\n        dispatch(authenticateSuccessed(response.data))\n      }\n      // handle failure\n      if (!response.data) {\n        dispatch(authenticateFailed(response))\n      }\n    } catch (error) {\n      // handle error\n      console.log(error)\n      return error\n    }\n  }\n}\n\nexport function userLogout() {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await logout()\n      if (response.request.status === 200) {\n        dispatch(logoutSuccess())\n      }\n    } catch (error) {\n      console.log(error)\n      return error\n    }\n  }\n}\n\nexport function userRequestForgotPassword(email: string) {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await requestForgotPassword(email)\n      if (response.request.status === 200) {\n        dispatch(requestForgotPasswordSuccess())\n      }\n    } catch (error) {\n      console.log(error)\n      return error\n    }\n  }\n}\n\nexport function userResetPassword(password: string, token: string) {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await resetPassword(password, token)\n      if (response.request.status === 200) {\n        dispatch(resetPasswordSuccess())\n      }\n    } catch (error) {\n      console.log(error)\n      return error\n    }\n  }\n}\n","import * as Yup from 'yup'\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .min(8, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required!'),\r\n  password: Yup.string()\r\n    .min(8, 'Minimum 8 characters')\r\n    .required('Required!'),\r\n})\r\n\r\nexport default LoginSchema","import React from 'react'\nimport { useHistory, Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Formik, Field, Form, FormikHelpers } from 'formik'\n\nimport { AppState } from '../../types'\nimport { userLogin } from '../../redux/actions/auth'\nimport GoogleLogo from '../../icons/icons8-google.svg'\nimport AmazonLogo from '../../icons/icons8-amazon.svg'\nimport LoginSchema from './validate'\nimport './loginForm.scss'\n\ntype Values = {\n  username: string\n  password: string\n}\nconst LoginForm = () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const isLoggedIn = useSelector((state: AppState) => state.auth.isLoggedIn)\n  if (isLoggedIn) {\n    history.push('/')\n  }\n  return (\n    <div className=\"form__wrapper\">\n      <div className=\"form__title\">Are you a user? </div>\n      <Formik\n        initialValues={{\n          username: '',\n          password: '',\n        }}\n        validationSchema={LoginSchema}\n        onSubmit={async (\n          values: Values,\n          { setSubmitting }: FormikHelpers<Values>\n        ) => {\n          const { username, password } = values\n          dispatch(userLogin(username, password))\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form className=\"form__content\">\n            <Field\n              required\n              id=\"username\"\n              name=\"username\"\n              placeholder=\"Username\"\n              className=\"form__content__input\"\n            />\n            {errors.username && touched.username ? (\n              <div className=\"form__content__error\">{errors.username}</div>\n            ) : null}\n            <Field\n              required\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              className=\"form__content__input\"\n            />\n            {errors.password && touched.password ? (\n              <div className=\"form__content__error\">{errors.password}</div>\n            ) : null}\n            <button type=\"submit\" className=\"form__content__submit-btn\">\n              Log in to AllandWell\n            </button>\n          </Form>\n        )}\n      </Formik>\n      <div className=\"social__login__text\">\n        Or login with your social media account\n      </div>\n\n      <a\n        href={\n          process.env.NODE_ENV === 'development'\n            ? 'https://2035.site/api/v1/auth/amazon'\n            : 'https://2035.site/api/v1/auth/amazon'\n        }\n        className=\"amazon__link\"\n      >\n        <img\n          src={AmazonLogo}\n          className=\"amazon__link__icon\"\n          alt=\"amazon icon\"\n        />\n        Login with Amazon\n      </a>\n      <a\n        href={\n          process.env.NODE_ENV === 'development'\n            ? 'https://2035.site/api/v1/auth/google'\n            : 'https://2035.site/api/v1/auth/google'\n        }\n        className=\"google__link\"\n      >\n        <img\n          src={GoogleLogo}\n          className=\"google__link__icon\"\n          alt=\"google icon\"\n        />\n        Login with Google\n      </a>\n      <div className=\"forgot-password__link\">\n        <Link to=\"/auth/forgot-password\">I forgot my password</Link>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginForm\n","import * as Yup from 'yup'\r\n\r\nconst RegisterSchema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .min(8, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required!'),\r\n  firstName: Yup.string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!'),\r\n  lastName: Yup.string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!'),\r\n  email: Yup.string().email('Invalid email!').required('Required!'),\r\n  password: Yup.string()\r\n    .min(8, 'Minimum 8 characters')\r\n    .required('Required!'),\r\n})\r\n\r\nexport default RegisterSchema\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Formik, Field, Form, FormikHelpers } from 'formik'\r\n\r\nimport { AppState } from '../../types'\r\nimport { userRegister } from '../../redux/actions/auth'\r\nimport RegisterSchema from './validate'\r\nimport './registerForm.scss'\r\n\r\ntype Values = {\r\n  username: string\r\n  firstName: string\r\n  lastName: string\r\n  email: string\r\n  password: string\r\n}\r\nconst RegisterForm = () => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const isLoggedIn = useSelector((state: AppState) => state.auth.isLoggedIn)\r\n  if (isLoggedIn) {\r\n    history.push('/')\r\n  }\r\n  return (\r\n    <div className=\"register form__wrapper\">\r\n      <div className=\"form__title\">Is this your first visit?</div>\r\n      <Formik\r\n        initialValues={{\r\n          username: '',\r\n          firstName: '',\r\n          lastName: '',\r\n          email: '',\r\n          password: '',\r\n        }}\r\n        validationSchema={RegisterSchema}\r\n        onSubmit={(\r\n          values: Values,\r\n          { setSubmitting }: FormikHelpers<Values>\r\n        ) => {\r\n          const { username, firstName, lastName, email, password } = values\r\n          dispatch(userRegister(username, email, password, firstName, lastName))\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className=\"form__content\">\r\n            <label htmlFor=\"username\" className=\"form__content__label\">\r\n              Username:\r\n            </label>\r\n            <Field\r\n              required\r\n              id=\"username\"\r\n              name=\"username\"\r\n              placeholder=\"john123\"\r\n              className=\"form__content__input\"\r\n            />\r\n            {errors.username && touched.username ? (\r\n              <div className=\"form__content__error\">{errors.username}</div>\r\n            ) : null}\r\n            <label htmlFor=\"password\" className=\"form__content__label\">\r\n              Password:\r\n            </label>\r\n            <Field\r\n              required\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"your password\"\r\n              className=\"form__content__input\"\r\n            />\r\n            {errors.password && touched.password ? (\r\n              <div className=\"form__content__error\">{errors.password}</div>\r\n            ) : null}\r\n            <label htmlFor=\"firstName\" className=\"form__content__label\">\r\n              First Name:\r\n            </label>\r\n            <Field\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              placeholder=\"John\"\r\n              className=\"form__content__input\"\r\n            />\r\n            {errors.firstName && touched.firstName ? (\r\n              <div className=\"form__content__error\">{errors.firstName}</div>\r\n            ) : null}\r\n            <label htmlFor=\"lastName\" className=\"form__content__label\">\r\n              Last Name:\r\n            </label>\r\n            <Field\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              placeholder=\"Doe\"\r\n              className=\"form__content__input\"\r\n            />\r\n            {errors.lastName && touched.lastName ? (\r\n              <div className=\"form__content__error\">{errors.lastName}</div>\r\n            ) : null}\r\n            <label htmlFor=\"email\" className=\"form__content__label\">\r\n              Email:\r\n            </label>\r\n            <Field\r\n              required\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"john@gmail.com\"\r\n              type=\"email\"\r\n              className=\"form__content__input\"\r\n            />\r\n            {errors.email && touched.email ? (\r\n              <div className=\"form__content__error\">{errors.email}</div>\r\n            ) : null}\r\n            <button type=\"submit\" className=\"form__content__submit-btn\">\r\n              Register\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterForm\r\n","import React, { useState } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nimport Header from '../../components/Header/index'\r\nimport Footer from '../../components/Footer/index'\r\nimport LoginForm from '../../components/LoginForm/index'\r\nimport RegisterForm from '../../components/RegisterForm/index'\r\nimport './auth.scss'\r\n\r\ntype AuthProps = {\r\n  title: string\r\n}\r\nconst Auth = (props: AuthProps) => {\r\n  const { title } = props\r\n  const [login, setLogin] = useState(true)\r\n  const handleAuthToggle = () => setLogin(!login)\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{title ? title : 'AMOUR'}</title>\r\n      </Helmet>\r\n      <div className=\"auth__wrapper\">\r\n        <Header />\r\n        <div className=\"auth__content\">\r\n          {login ? (\r\n            <LoginForm />\r\n          ) : (\r\n            <button className=\"auth__login-btn\" onClick={handleAuthToggle}>\r\n              Login\r\n            </button>\r\n          )}\r\n          <div className=\"divider\" />\r\n          {login ? (\r\n            <button className=\"auth__register-btn\" onClick={handleAuthToggle}>\r\n              Register\r\n            </button>\r\n          ) : (\r\n            <RegisterForm />\r\n          )}\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Auth\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Formik, Field, Form, FormikHelpers } from 'formik'\r\n\r\nimport { userRequestForgotPassword } from '../../redux/actions/auth'\r\nimport './forgotPasswordForm.scss'\r\n\r\ntype Values = {\r\n  email: string\r\n}\r\nfunction validateEmail(value: string) {\r\n  let error\r\n  if (!value) {\r\n    error = 'Required!'\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n    error = 'Invalid email address!'\r\n  }\r\n  return error\r\n}\r\nconst ForgotPasswordForm = () => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <div className=\"form__wrapper\">\r\n      <div className=\"form__title\">RECOVER YOUR PASSWORD </div>\r\n      <p>We will send you an e-mail to reset your password: </p>\r\n      <Formik\r\n        initialValues={{\r\n          email: '',\r\n        }}\r\n        onSubmit={async (\r\n          values: Values,\r\n          { setSubmitting, resetForm }: FormikHelpers<Values>\r\n        ) => {\r\n          const { email } = values\r\n          dispatch(userRequestForgotPassword(email))\r\n          alert('The reset link is sent to your email')\r\n          setSubmitting(false)\r\n          resetForm()\r\n          history.push('/auth')\r\n        }}\r\n      >\r\n        {({ errors, touched, isValidating }) => (\r\n          <Form className=\"form__content\">\r\n            <Field\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              className=\"form__content__input\"\r\n              validate={validateEmail}\r\n            />\r\n            {errors.email && touched.email && (\r\n              <div className=\"form__content__error\">{errors.email}</div>\r\n            )}\r\n            <button type=\"submit\" className=\"form__content__submit-btn\">\r\n              SEND\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPasswordForm\r\n","import React from 'react'\r\n\r\nimport Header from '../../components/Header/index'\r\nimport Footer from '../../components/Footer/index'\r\nimport ForgotPasswordForm from '../../components/ForgotPasswordForm/index'\r\nimport './forgotPassword.scss'\r\n\r\nexport default function ForgotPassword() {\r\n  return (\r\n    <div className=\"forgot-password__wrapper\">\r\n      <Header />\r\n      <div className=\"forgot-password__content\">\r\n        <ForgotPasswordForm />\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Formik, Field, Form, FormikHelpers } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nimport { userResetPassword } from '../../redux/actions/auth'\r\nimport './resetPasswordForm.scss'\r\ntype ResetPasswordFormParams = {\r\n  token: string\r\n}\r\ntype Values = {\r\n  newPassword: string\r\n}\r\nconst ResetPasswordSchema = Yup.object().shape({\r\n  newPassword: Yup.string()\r\n    .min(8, 'Minimum 8 characters')\r\n    .required('Required!'),\r\n})\r\nconst ResetPasswordForm = (props: ResetPasswordFormParams) => {\r\n  const { token } = props\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <div className=\"form__wrapper\">\r\n      <div className=\"form__title\">enter your new password </div>\r\n      <Formik\r\n        initialValues={{\r\n          newPassword: '',\r\n        }}\r\n        validationSchema={ResetPasswordSchema}\r\n        onSubmit={async (\r\n          values: Values,\r\n          { setSubmitting, resetForm }: FormikHelpers<Values>\r\n        ) => {\r\n          const { newPassword } = values\r\n          dispatch(userResetPassword(newPassword, token))\r\n          alert('Reset password successfully')\r\n          setSubmitting(false)\r\n          resetForm()\r\n          history.push('/auth')\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className=\"form__content\">\r\n            <Field\r\n              type=\"password\"\r\n              id=\"newPassword\"\r\n              name=\"newPassword\"\r\n              placeholder=\"new password\"\r\n              className=\"form__content__input\"\r\n            />\r\n             {errors.newPassword && touched.newPassword ? (\r\n              <div className=\"form__content__error\">{errors.newPassword}</div>\r\n            ) : null}\r\n            <button type=\"submit\" className=\"form__content__submit-btn\">\r\n              reset\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResetPasswordForm\r\n","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport Header from '../../components/Header/index'\r\nimport Footer from '../../components/Footer/index'\r\nimport ResetPasswordForm from '../../components/ResetPasswordForm/index'\r\nimport './resetPassword.scss'\r\n\r\ntype ResetPasswordParams = {\r\n  token: string\r\n}\r\nexport default function ResetPassword() {\r\n  const { token } = useParams<ResetPasswordParams>()\r\n  return (\r\n    <div className=\"reset-password__wrapper\">\r\n      <Header />\r\n      <div className=\"reset-password__content\">\r\n        <ResetPasswordForm token={token} />\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { useParams,useHistory } from 'react-router-dom'\r\n\r\n\r\ntype ResetPasswordParams = {\r\n  token: string\r\n}\r\nexport default function Callback() {\r\n  const history = useHistory()\r\n  const { token } = useParams<ResetPasswordParams>()\r\n  console.log(token)\r\n  history.push('/')\r\n  return (\r\n    <div></div>\r\n  )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './emptyCart.scss'\r\n\r\nfunction EmptyCart() {\r\n  return (\r\n    <section className=\"empty-cart\">\r\n      <h1 className=\"empty-cart__header\">Your cart is empty</h1>\r\n      <p>\r\n        If you have added products to your cart during previous visit, try\r\n        logging into your account.\r\n      </p>\r\n      <p className=\"empty-cart__break\"> OR CONTINUE SHOPPING</p>\r\n      <div className=\"empty-cart__redirect\">\r\n        <Link\r\n          to=\"/\"\r\n          className=\"empty-cart__redirect__item\"\r\n        >\r\n          Home\r\n        </Link>\r\n       \r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default EmptyCart\r\n","import { Dispatch } from 'redux'\r\n\r\nimport {\r\n  GET_ALL_ITEMS_FROM_CART_LOCAL,\r\n  LocalActions,\r\n  ItemInCart\r\n} from '../../types'\r\n\r\nexport function getAllItemsFromCartLocal(itemsInCart: ItemInCart[]): LocalActions {\r\n  return {\r\n    type: GET_ALL_ITEMS_FROM_CART_LOCAL,\r\n    payload: {\r\n      itemsInCart,\r\n    },\r\n  }\r\n}\r\n\r\n// Async action processed by redux-thunk middleware\r\nexport function getAllItemsFromLocalStorage() {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n      let allItemsInCart: ItemInCart[] = []\r\n      const serializedItems = localStorage.getItem('itemsInCartLocal')\r\n      if (serializedItems) {\r\n        allItemsInCart = JSON.parse(serializedItems)\r\n      }\r\n      dispatch(getAllItemsFromCartLocal(allItemsInCart))\r\n    } catch (error) {\r\n      // handle error\r\n      console.log(error)\r\n      return error\r\n    }\r\n  }\r\n}\r\n\r\n","import { Product, ItemInCart } from '../types'\r\n\r\nconst saveItemToLocalStorage = (product: Product) => {\r\n  let allItemsInCart: ItemInCart[] = []\r\n  const serializedItems = localStorage.getItem('itemsInCartLocal')\r\n  if (serializedItems) {\r\n    allItemsInCart = JSON.parse(serializedItems)\r\n  }\r\n  let cartCopy = [...allItemsInCart]\r\n  const itemAdded = cartCopy.find((item) => item.product._id === product._id)\r\n  if (itemAdded) {\r\n    const itemAddedIndex = cartCopy.findIndex(\r\n      (item) => item.product._id === product._id\r\n    )\r\n    itemAdded.quantity += 1\r\n    cartCopy[itemAddedIndex] = itemAdded\r\n  }\r\n  if (!itemAdded) {\r\n    cartCopy.push({ product: product, quantity: 1 })\r\n  }\r\n  let stringCart = JSON.stringify(cartCopy)\r\n  localStorage.setItem('itemsInCartLocal', stringCart)\r\n}\r\nconst deleteItemFromLocalStorage = (productId: string) => {\r\n  let allItemsInCart: ItemInCart[] = []\r\n  const serializedItems = localStorage.getItem('itemsInCartLocal')\r\n  if (serializedItems) {\r\n    allItemsInCart = JSON.parse(serializedItems)\r\n  }\r\n  let cartCopy = [...allItemsInCart]\r\n  const itemAdded = cartCopy.find((item) => item.product._id === productId)\r\n  if (itemAdded) {\r\n    const itemAddedIndex = cartCopy.findIndex(\r\n      (item) => item.product._id === productId\r\n    )\r\n    cartCopy.splice(itemAddedIndex, 1)\r\n  }\r\n  let stringCart = JSON.stringify(cartCopy)\r\n  localStorage.setItem('itemsInCartLocal', stringCart)\r\n}\r\n\r\nconst decreaseItemQuantityFromLocalStorage = (productId: string) => {\r\n  let allItemsInCart: ItemInCart[] = []\r\n  const serializedItems = localStorage.getItem('itemsInCartLocal')\r\n  if (serializedItems) {\r\n    allItemsInCart = JSON.parse(serializedItems)\r\n  }\r\n  let cartCopy = [...allItemsInCart]\r\n  const itemAdded = cartCopy.find((item) => item.product._id === productId)\r\n  if (itemAdded) {\r\n    const itemAddedIndex = cartCopy.findIndex(\r\n      (item) => item.product._id === productId\r\n    )\r\n    if (itemAdded.quantity > 1) {\r\n      itemAdded.quantity -= 1\r\n      cartCopy[itemAddedIndex] = itemAdded\r\n    } else if ((itemAdded.quantity = 1)) {\r\n      cartCopy.splice(itemAddedIndex, 1)\r\n    }\r\n  }\r\n  let stringCart = JSON.stringify(cartCopy)\r\n  localStorage.setItem('itemsInCartLocal', stringCart)\r\n}\r\n\r\nexport {\r\n  saveItemToLocalStorage,\r\n  deleteItemFromLocalStorage,\r\n  decreaseItemQuantityFromLocalStorage,\r\n}\r\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { ItemInCart, AppState } from '../../types'\nimport {\n  getUserWithItemsPopulate,\n  userRemoveItemFromCart,\n  userAddItemToCart,\n  userDecreaseItemQuantityFromCart,\n} from '../../redux/actions/user'\nimport { getAllItemsFromLocalStorage } from '../../redux/actions/local'\nimport {\n  deleteItemFromLocalStorage,\n  saveItemToLocalStorage,\n  decreaseItemQuantityFromLocalStorage,\n} from '../../localStorage/index'\nimport trashIcon from '../../icons/icons8-trash.svg'\nimport './cartItem.scss'\n\ntype CartItemProps = {\n  cartItem: ItemInCart\n}\nfunction CartItem(props: CartItemProps) {\n  const { cartItem } = props\n  const dispatch = useDispatch()\n  const isLoggedIn = useSelector((state: AppState) => state.auth.isLoggedIn)\n  const user = useSelector((state: AppState) => state.auth.user)\n  if (cartItem.product != null && !cartItem.product.images) {\n    if (user) dispatch(getUserWithItemsPopulate(user?._id))\n    return <div>Loading...</div>\n  }\n  const handleDeleteProductInCart = () => {\n    if (isLoggedIn && user) {\n      dispatch(userRemoveItemFromCart(user?._id, cartItem.product._id))\n    } else if (!isLoggedIn) {\n      deleteItemFromLocalStorage(cartItem.product._id)\n      dispatch(getAllItemsFromLocalStorage())\n    }\n  }\n  const handleIncreaseProductQuantityToCart = () => {\n    if (isLoggedIn && user) {\n      dispatch(userAddItemToCart(user?._id, cartItem.product._id))\n    } else if (!isLoggedIn) {\n      saveItemToLocalStorage(cartItem.product)\n      dispatch(getAllItemsFromLocalStorage())\n    }\n  }\n  const handleDecreaseProductQuantityToCart = () => {\n    if (isLoggedIn && user) {\n      dispatch(\n        userDecreaseItemQuantityFromCart(user?._id, cartItem.product._id)\n      )\n    } else if (!isLoggedIn) {\n      decreaseItemQuantityFromLocalStorage(cartItem.product._id)\n      dispatch(getAllItemsFromLocalStorage())\n    }\n  }\n  return (\n    <div className=\"cart-item__wrapper\">\n      <img\n        className=\"cart-item__img\"\n        src={cartItem.product.images[0]}\n        alt=\"cart item\"\n      ></img>\n      <Link\n        to={`/products/${cartItem.product._id}`}\n        className=\"cart-item__name\"\n      >\n        {cartItem.product.name}\n      </Link>\n      <div className=\"cart-item__quantity\">Quantity: {cartItem.quantity}</div>\n      <div className=\"cart-item__util\">\n        <button\n          className=\"cart-item__util__add\"\n          aria-label=\"Increase the item quantity\"\n          onClick={handleIncreaseProductQuantityToCart}\n        >\n          +\n        </button>\n        <button\n          className=\"cart-item__util__sub\"\n          aria-label=\"Decrease the item quantity\"\n          onClick={handleDecreaseProductQuantityToCart}\n        >\n          -\n        </button>\n      </div>\n      <button\n        aria-label=\"Delete the item\"\n        className=\"cart-item__delete-button\"\n        onClick={handleDeleteProductInCart}\n      >\n        <img src={trashIcon} alt=\"delete\" />\n      </button>\n      <div className=\"cart-item__price\">{cartItem.product.price}</div>\n    </div>\n  )\n}\n\nexport default CartItem\n","import React from 'react'\nimport './checkoutSidebar.scss'\nimport { ItemInCart } from '../../types'\n\ntype CheckoutSidebarProps = {\n  totalPrice: number\n  itemsInCart: ItemInCart[]\n}\nfunction CheckoutSidebar(props: CheckoutSidebarProps) {\n  const { totalPrice, itemsInCart } = props\n\n  const openwin = (url: string) => {\n    var a = document.createElement('a')\n    a.setAttribute('href', url)\n    a.setAttribute('target', '_blank')\n    a.setAttribute('id', 'camnpr')\n    document.body.appendChild(a)\n    a.click()\n  }\n  const checkOut = () => {\n    console.log('hello')\n    console.log(itemsInCart)\n    /**\n     * constuct add cart with aws\n     */\n    var url =\n      'http://www.amazon.com/gp/aws/cart/add.html?AssociateTag=allandwell-20'\n    itemsInCart.map((item: ItemInCart, index) => {\n      console.log(item)\n      url += '&ASIN.' + index + '=' + item.product.asin || ''\n      url += '&Quantity.' + index + '=' + item.quantity\n    })\n    //  $.each(this.cart, function( i, p ) {\n    //   var itemNumber = i + 1;\n    //   var quant = p[mi.options.paramSettings.productQuantity];\n    //   var asin = mi._getValueOrEmpty(p[mi.options.paramSettings.productAsin]);\n    //   url += \"&ASIN.\" + itemNumber + \"=\" + asin;\n    //   url += \"&Quantity.\" + itemNumber + \"=\" + quant;\n    //  });\n\n    openwin(url)\n  }\n\n  return (\n    <>\n      <div className=\"checkout-sidebar__content\">\n        <div className=\"checkout-sidebar__section\">\n          <h3>Products price</h3>\n          <p>{totalPrice.toFixed(2)} USD</p>\n        </div>\n        <div className=\"checkout-sidebar__section\">\n          <h3>Delivery</h3>\n          <p>From 0.00</p>\n        </div>\n        <div className=\"checkout-sidebar__section\">\n          <h2>\n            Total<span> (with vat)</span>\n          </h2>\n          <p className=\"checkout-sidebar__total\">\n            {(totalPrice * 1.01).toFixed(2)} USD\n          </p>\n        </div>\n      </div>\n      <button onClick={checkOut} className=\"checkout-sidebar__link\">\n        Go to checkout\n      </button>\n    </>\n  )\n}\n\nexport default CheckoutSidebar\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nimport Header from '../../components/Header/index'\r\nimport EmptyCart from '../../components/EmptyCart/index'\r\nimport CartItem from '../../components/CartItem/index'\r\nimport CheckoutSidebar from '../../components/CheckoutSidebar/index'\r\nimport { AppState, ItemInCart } from '../../types'\r\nimport './cart.scss'\r\n\r\ntype CartProps = {\r\n  title: string\r\n}\r\nfunction Cart(props: CartProps) {\r\n  const { title } = props\r\n  const user = useSelector((state: AppState) => state.auth.user)\r\n  const isLoggedIn = useSelector((state: AppState) => state.auth.isLoggedIn)\r\n  const itemsInCartLocal = useSelector(\r\n    (state: AppState) => state.local.itemsInCart\r\n  )\r\n  // local storage\r\n  // let numberOfItemsInCartLocal = 0\r\n  let totalPriceOfAllItemsInCartLocal = 0\r\n  if (itemsInCartLocal) {\r\n    itemsInCartLocal.forEach((item) => {\r\n      // numberOfItemsInCartLocal += item.quantity\r\n      totalPriceOfAllItemsInCartLocal += item.product.price * item.quantity\r\n    })\r\n  }\r\n\r\n  // database\r\n  // let numberOfItemsInCart = 0\r\n  let totalPriceOfAllItemsInCart = 0\r\n  if (user?.itemsInCart) {\r\n    user?.itemsInCart?.forEach((item) => {\r\n      // numberOfItemsInCart += item.quantity\r\n      totalPriceOfAllItemsInCart += item.product.price * item.quantity\r\n    })\r\n  }\r\n  // check if user logged in\r\n  // if yes get data from database, if no get from localstorage\r\n  const itemsInCart = isLoggedIn\r\n    ? user?.itemsInCart\r\n      ? user?.itemsInCart\r\n      : []\r\n    : itemsInCartLocal\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{title ? title : 'AMOUR'}</title>\r\n      </Helmet>\r\n      <div className=\"cart__wrapper\">\r\n        <Header />\r\n        {itemsInCart.length === 0 && (\r\n          <div className=\"cart__empty__wrapper\">\r\n            <EmptyCart />\r\n          </div>\r\n        )}\r\n        {itemsInCart.length !== 0 && (\r\n          <div className=\"cart__content__wrapper\">\r\n            <div className=\"cart__list\">\r\n              <h1>\r\n                Cart <small>{itemsInCart.length} QTY</small>\r\n              </h1>\r\n              <p>\r\n                ! Do not delay with the purchase, adding items to the cart does\r\n                not mean their reservation.\r\n              </p>\r\n              {itemsInCart.map((item: ItemInCart, index) => (\r\n                <CartItem key={index} cartItem={item} />\r\n              ))}\r\n            </div>\r\n            <div className=\"cart__checkout-wrapper\">\r\n              <CheckoutSidebar\r\n                totalPrice={\r\n                  isLoggedIn\r\n                    ? totalPriceOfAllItemsInCart\r\n                    : totalPriceOfAllItemsInCartLocal\r\n                }  itemsInCart={itemsInCart}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Cart\r\n\r\n","import React from 'react'\nimport { useParams, useHistory, Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLongArrowAltLeft } from '@fortawesome/free-solid-svg-icons'\n\nimport Header from '../../components/Header/index'\nimport Footer from '../../components/Footer/index'\nimport { fetchProducts, adminDeleteProduct } from '../../redux/actions/product'\nimport {\n  userAddItemToCart,\n  userRemoveItemFromCart,\n} from '../../redux/actions/user'\nimport { getAllItemsFromLocalStorage } from '../../redux/actions/local'\nimport {\n  deleteItemFromLocalStorage,\n  saveItemToLocalStorage,\n} from '../../localStorage/index'\nimport { AppState } from '../../types'\nimport './product.scss'\n\ntype ProductParams = {\n  productId: string\n}\nfunction Product() {\n  const { productId } = useParams<ProductParams>()\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const isLoggedIn = useSelector((state: AppState) => state.auth.isLoggedIn)\n  const user = useSelector((state: AppState) => state.auth.user)\n  const isAdmin = user?.isAdmin\n  const products = useSelector((state: AppState) => state.product.items)\n  if (products.length === 0) {\n    dispatch(fetchProducts())\n    return <p>Loading...</p>\n  }\n  const product = products.find((product) => product._id === productId)\n  if (!product) {\n    return <div>Product not found</div>\n  }\n  console.log('product', product)\n  /**\n   * Purchase on Amazon\n   */\n  // const buyOnAmazon=()=>{\n  //   console.log(product)\n  // }\n  /**\n   * Add product to cart\n   */\n  const addProductToCart = () => {\n    // if user doesnt login yet, save item to localStorage\n    if (product && !isLoggedIn) {\n      saveItemToLocalStorage(product)\n      dispatch(getAllItemsFromLocalStorage())\n    }\n    if (user) {\n      if (product && isLoggedIn) {\n        dispatch(userAddItemToCart(user?._id, productId))\n      }\n    }\n  }\n  const handleGoBack = () => history.goBack()\n  const handleDeleteProduct = () => {\n    if (user && isAdmin) {\n      deleteItemFromLocalStorage(productId)\n      dispatch(getAllItemsFromLocalStorage())\n      dispatch(userRemoveItemFromCart(user?._id, productId))\n      dispatch(adminDeleteProduct(productId))\n      history.push('/')\n    }\n  }\n  return (\n    <div>\n      <Header />\n      <button className=\"back-btn\" onClick={handleGoBack}>\n        <FontAwesomeIcon\n          icon={faLongArrowAltLeft}\n          arial-label=\"back to mainpage\"\n        />\n      </button>\n      <section className=\"product__container\">\n        <div className=\"product__img__container\">\n          <img src={product.images[0]} alt={product.name} />\n        </div>\n        <div className=\"product__info__container\">\n          <h2 className=\"product__info__name\">{product.name}</h2>\n          <h3 className=\"product__info__label\">Price:</h3>\n          <p>{product.price} $</p>\n          <h3 className=\"product__info__label\">Size:</h3>\n          <p>{product.size}</p>\n          <h3 className=\"product__info__label\">Description:</h3>\n          <p>{product.description}</p>\n          {product.variants && (\n            <>\n              <h3 className=\"product__info__label\">Variants:</h3>\n              {product.variants.map((variant) => (\n                <div key={variant}>#{variant}</div>\n              ))}\n            </>\n          )}\n          <button className=\"product__buy-btn\">\n            <a\n              href={product.affiliateurl}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Purchase on Amazon\n            </a>\n          </button>\n          <button onClick={addProductToCart} className=\"product__add-btn\">\n            Add to shopping bag\n          </button>\n          <div className=\"product__info__sub\">\n            <span className=\"product__span\">&#10003;</span>Free delivery to\n            store\n          </div>\n          <div className=\"product__info__sub\">\n            <span className=\"product__span\">&#10003;</span>Material and care\n          </div>\n          {isAdmin && (\n            <div className=\"product__settings\">\n              <Link\n                to={`/products/update/${product._id}`}\n                className=\"product__settings__update\"\n              >\n                Update the product info\n              </Link>\n              <button\n                className=\"product__settings__delete\"\n                onClick={handleDeleteProduct}\n              >\n                Delete this product\n              </button>\n            </div>\n          )}\n        </div>\n      </section>\n      <Footer />\n    </div>\n  )\n}\n\nexport default Product\n","import * as Yup from 'yup'\n\nconst AddProductSchema = Yup.object().shape({\n  productName: Yup.string()\n    .min(4, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required!'),\n  price: Yup.number().min(1, 'Minimum 1 characters').required('Required!'),\n  images: Yup.array()\n    .of(Yup.string().min(4, 'Too Short!').required('Required'))\n    .required('Must have at least one product image'),\n  affiliateurl: Yup.string().min(10, 'Too Short!').max(400, 'Too Long!'),\n  asin: Yup.string().min(1, 'Too Short!').max(400, 'Too Long!'),\n  description: Yup.string().min(10, 'Too Short!').max(400, 'Too Long!'),\n  category: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required!'),\n  variants: Yup.array().of(Yup.string().min(4, 'Too Short!')),\n  size: Yup.mixed().required('Required!'),\n})\n\nexport default AddProductSchema\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Formik, Field, Form, FormikHelpers, FieldArray } from 'formik'\n\nimport { AppState } from '../../types'\nimport { adminUpdateProduct } from '../../redux/actions/product'\nimport AddProductSchema from '../AddProductForm/validate'\nimport './updateProductForm.scss'\n\ntype Values = {\n  productName: string\n  price: number\n  images: string[]\n  affiliateurl: string\n  asin: string\n  description: string\n  category: string\n  variants: string[]\n  size: string | number\n}\ntype ProductParams = {\n  productId: string\n}\nconst UpdateProductForm = () => {\n  const { productId } = useParams<ProductParams>()\n  const dispatch = useDispatch()\n  const isLoggedIn = useSelector((state: AppState) => state.auth.isLoggedIn)\n  const products = useSelector((state: AppState) => state.product.items)\n  const product = products.find((product) => product._id === productId)\n  if (!product) {\n    return <div>Product not found</div>\n  }\n  return (\n    <div className=\"\">\n      <div className=\"form__title update-product__form__title\">\n        Update the product\n      </div>\n      {isLoggedIn && (\n        <Formik\n          initialValues={{\n            productName: product.name,\n            price: product.price,\n            images: product.images,\n            affiliateurl: product.affiliateurl ? product.affiliateurl : '',\n            asin: product.asin ? product.asin : '',\n            description: product.description ? product.description : '',\n            category: product.category,\n            variants: product.variants ? product.variants : [''],\n            size: product.size,\n          }}\n          validationSchema={AddProductSchema}\n          onSubmit={async (\n            values,\n            { setSubmitting, resetForm }: FormikHelpers<Values>\n          ) => {\n            const {\n              productName,\n              price,\n              images,\n              affiliateurl,\n              asin,\n              description,\n              category,\n              variants,\n              size,\n            } = values\n            dispatch(\n              adminUpdateProduct(\n                productId,\n                productName,\n                price,\n                images,\n                affiliateurl,\n                asin,\n                description,\n                category,\n                variants,\n                size\n              )\n            )\n            alert('The product is updated')\n            setSubmitting(false)\n            resetForm()\n          }}\n        >\n          {({ isSubmitting, values, errors, touched }) => (\n            <Form className=\"form__content update-product__form__content\">\n              <label htmlFor=\"productName\" className=\"form__content__label\">\n                *Name:\n              </label>\n              <Field\n                required\n                id=\"productName\"\n                placeholder=\"V-neck shirt\"\n                name=\"productName\"\n                className=\"form__content__input\"\n              />\n              {errors.productName && touched.productName ? (\n                <div className=\"form__content__error\">{errors.productName}</div>\n              ) : null}\n              <label htmlFor=\"price\" className=\"form__content__label\">\n                *Price <span>(e)</span>:\n              </label>\n              <Field\n                required\n                type=\"number\"\n                id=\"price\"\n                name=\"price\"\n                className=\"form__content__input\"\n              />\n              {errors.price && touched.price ? (\n                <div className=\"form__content__error\">{errors.price}</div>\n              ) : null}\n              <label htmlFor=\"images\" className=\"form__content__label\">\n                *Images (links):\n              </label>\n              <FieldArray name=\"images\">\n                {({ insert, remove, push }) => (\n                  <div>\n                    {values.images.length > 0 &&\n                      values.images.map((image, index) => (\n                        <div className=\"row\" key={index}>\n                          <div className=\"col\">\n                            {/* <label htmlFor={`friends.${index}`}>Name</label> */}\n                            <Field\n                              required\n                              name={`images.${index}`}\n                              placeholder=\"https://imgur.com/O4osup3\"\n                              type=\"text\"\n                              className=\"update-product__form__imgUrl\"\n                            />\n                          </div>\n                          <div className=\"col\">\n                            <button type=\"button\" onClick={() => remove(index)}>\n                              X\n                            </button>\n                          </div>\n                        </div>\n                      ))}\n                    <button type=\"button\" onClick={() => push('')}>\n                      Add link\n                    </button>\n                  </div>\n                )}\n              </FieldArray>\n              {errors.images && touched.images ? (\n                <div className=\"form__content__error\">{errors.images}</div>\n              ) : null}\n              <label htmlFor=\"affiliateurl\" className=\"form__content__label\">\n                AffiliateUrl:\n              </label>\n              <Field\n                id=\"affiliateurl\"\n                name=\"affiliateurl\"\n                className=\"form__content__input\"\n              />\n              {errors.affiliateurl && touched.affiliateurl ? (\n                <div className=\"form__content__error\">\n                  {errors.affiliateurl}\n                </div>\n              ) : null}\n\n              <label htmlFor=\"asin\" className=\"form__content__label\">\n                ASIN:\n              </label>\n              <Field id=\"asin\" name=\"asin\" className=\"form__content__input\" />\n              {errors.asin && touched.asin ? (\n                <div className=\"form__content__error\">{errors.asin}</div>\n              ) : null}\n\n              <label htmlFor=\"description\" className=\"form__content__label\">\n                Description:\n              </label>\n              <Field\n                id=\"description\"\n                name=\"description\"\n                className=\"form__content__input\"\n              />\n              {errors.description && touched.description ? (\n                <div className=\"form__content__error\">{errors.description}</div>\n              ) : null}\n              <label htmlFor=\"category\" className=\"form__content__label\">\n                *Category:\n              </label>\n              <Field\n                required\n                id=\"category\"\n                name=\"category\"\n                className=\"form__content__input\"\n              />\n              {errors.category && touched.category ? (\n                <div className=\"form__content__error\">{errors.category}</div>\n              ) : null}\n              <label htmlFor=\"variants\" className=\"form__content__label\">\n                Variants:\n              </label>\n              <FieldArray name=\"variants\">\n                {({ insert, remove, push }) => (\n                  <div>\n                    {values.variants.length > 0 &&\n                      values.variants.map((variant, index) => (\n                        <div className=\"row\" key={index}>\n                          <div className=\"col\">\n                            {/* <label htmlFor={`friends.${index}`}>Name</label> */}\n                            <Field\n                              name={`variants.${index}`}\n                              placeholder=\"cotton\"\n                              type=\"text\"\n                            />\n                          </div>\n                          <div className=\"col\">\n                            <button type=\"button\" onClick={() => remove(index)}>\n                              X\n                            </button>\n                          </div>\n                        </div>\n                      ))}\n                    <button type=\"button\" onClick={() => push('')}>\n                      Add variant\n                    </button>\n                  </div>\n                )}\n              </FieldArray>\n              {errors.variants && touched.variants ? (\n                <div className=\"form__content__error\">{errors.variants}</div>\n              ) : null}\n              <label htmlFor=\"size\" className=\"form__content__label\">\n                *Size:\n              </label>\n              <Field\n                required\n                id=\"size\"\n                name=\"size\"\n                className=\"form__content__input\"\n              />\n              {errors.size && touched.size ? (\n                <div className=\"form__content__error\">{errors.size}</div>\n              ) : null}\n              <button\n                type=\"submit\"\n                className=\"form__content__submit-btn\"\n                disabled={isSubmitting}\n              >\n                Update\n              </button>\n            </Form>\n          )}\n        </Formik>\n      )}\n    </div>\n  )\n}\n\nexport default UpdateProductForm\n","import React from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faLongArrowAltLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport Header from '../../components/Header/index'\r\nimport Footer from '../../components/Footer/index'\r\nimport UpdateProductForm from '../../components/UpdateProductForm/index'\r\nimport { fetchProducts } from '../../redux/actions/product'\r\nimport { AppState } from '../../types'\r\nimport '../Product/product.scss'\r\n\r\ntype ProductParams = {\r\n  productId: string\r\n}\r\nfunction UpdateProduct() {\r\n  const { productId } = useParams<ProductParams>()\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const products = useSelector((state: AppState) => state.product.items)\r\n  if (products.length === 0) {\r\n    dispatch(fetchProducts())\r\n    return <p>Loading...</p>\r\n  }\r\n  const product = products.find((product) => product._id === productId)\r\n  if (!product) {\r\n    return <div>Product not found</div>\r\n  }\r\n  const handleGoBack = () => history.goBack()\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <button className=\"back-btn\" onClick={handleGoBack}>\r\n        <FontAwesomeIcon\r\n          icon={faLongArrowAltLeft}\r\n          arial-label=\"back to mainpage\"\r\n        />\r\n      </button>\r\n      <section className=\"product__container\">\r\n        <div className=\"product__img__container\">\r\n          <img src={product.images[0]} alt={product.name} />\r\n        </div>\r\n        <UpdateProductForm />\r\n      </section>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateProduct\r\n","import React from 'react'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { AppState } from '../../types'\r\nimport { userLogout } from '../../redux/actions/auth'\r\nimport './userAccountNavigation.scss'\r\n\r\nfunction UserAccountNavigation() {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector((state: AppState) => state.auth.user)\r\n  const isAdmin = user?.isAdmin\r\n  const handleSignOut = () => {\r\n    dispatch(userLogout())\r\n    history.push('/')\r\n  }\r\n  return (\r\n    <nav className=\"account__navigation\">\r\n      <ul className=\"account__navigation__list\">\r\n        <li className=\"account__navigation__item\">\r\n          <NavLink\r\n            to={`/user/${user?._id}`}\r\n            activeClassName=\"account__navigation__link--active\"\r\n            className=\"account__navigation__link\"\r\n          >\r\n            my data\r\n          </NavLink>\r\n        </li>\r\n        {isAdmin && (\r\n          <li className=\"account__navigation__item\">\r\n            <NavLink\r\n              to=\"/admin/addnewproduct\"\r\n              activeClassName=\"account__navigation__link--active\"\r\n              className=\"account__navigation__link\"\r\n            >\r\n              Add new product\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n        <li className=\"account__navigation__item\">\r\n          <NavLink to=\"#\" className=\"account__navigation__link\">\r\n            my orders\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"account__navigation__item\">\r\n          <NavLink to=\"#\" className=\"account__navigation__link\">\r\n            my returns\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"account__navigation__item\">\r\n          <NavLink to=\"#\" className=\"account__navigation__link\">\r\n            invoice data\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"account__navigation__item\">\r\n          <button className=\"account__navigation__btn\" onClick={handleSignOut}>\r\n            sign out\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default UserAccountNavigation\r\n","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Formik, Field, Form, FormikHelpers } from 'formik'\r\n\r\nimport { AppState } from '../../types'\r\nimport { updateUserProfile } from '../../redux/actions/user'\r\nimport * as Yup from 'yup'\r\nimport './userDataForm.scss'\r\n\r\ntype Values = {\r\n  email: string\r\n  firstName: string\r\n  lastName: string\r\n}\r\ntype Params = {\r\n  userId: string\r\n}\r\nconst UserDataSchema = Yup.object().shape({\r\n  email: Yup.string().email('Invalid email').required('Required'),\r\n  firstName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!'),\r\n  lastName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!'),\r\n})\r\nconst UserDataForm = () => {\r\n  const { userId } = useParams<Params>()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector((state: AppState) => state.auth.user)\r\n  const isLoggedIn = useSelector((state: AppState) => state.auth.isLoggedIn)\r\n\r\n  return (\r\n    <div className=\"personal__form\">\r\n      <div className=\"form__title personal__form__title\">my data </div>\r\n      {isLoggedIn && (\r\n        <Formik\r\n          initialValues={{\r\n            email: user?.email ? user.email : '',\r\n            firstName: user?.firstName ? user.firstName : '',\r\n            lastName: user?.lastName ? user.lastName : '',\r\n          }}\r\n          validationSchema={UserDataSchema}\r\n          onSubmit={async (\r\n            values: Values,\r\n            { setSubmitting }: FormikHelpers<Values>\r\n          ) => {\r\n            const { email, firstName, lastName } = values\r\n            dispatch(updateUserProfile(userId, email, firstName, lastName))\r\n            alert('Your profile is updated')\r\n            setSubmitting(false)\r\n          }}\r\n        >\r\n          {({ isSubmitting, errors, touched }) => (\r\n            <Form className=\"form__content personal__form__content\">\r\n              <label htmlFor=\"email\" className=\"form__content__label\">\r\n                Email:\r\n              </label>\r\n              <Field\r\n                id=\"email\"\r\n                name=\"email\"\r\n                className=\"form__content__input\"\r\n                required\r\n              />\r\n              {errors.email && touched.email ? (\r\n                <div className=\"form__content__error\">{errors.email}</div>\r\n              ) : null}\r\n              <label htmlFor=\"firstName\" className=\"form__content__label\">\r\n                First name:\r\n              </label>\r\n              <Field\r\n                id=\"firstName\"\r\n                name=\"firstName\"\r\n                placeholder=\"first name\"\r\n                className=\"form__content__input\"\r\n              />\r\n              {errors.firstName && touched.firstName ? (\r\n                <div className=\"form__content__error\">{errors.firstName}</div>\r\n              ) : null}\r\n              <label htmlFor=\"lastName\" className=\"form__content__label\">\r\n                Last name:\r\n              </label>\r\n              <Field\r\n                id=\"lastName\"\r\n                name=\"lastName\"\r\n                placeholder=\"last name\"\r\n                className=\"form__content__input\"\r\n              />\r\n              {errors.lastName && touched.lastName ? (\r\n                <div className=\"form__content__error\">{errors.lastName}</div>\r\n              ) : null}\r\n              <button\r\n                type=\"submit\"\r\n                className=\"form__content__submit-btn\"\r\n                disabled={isSubmitting}\r\n              >\r\n                Save changes\r\n              </button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserDataForm\r\n","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Formik, Field, Form, FormikHelpers } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nimport { updateUserPassword } from '../../redux/actions/user'\r\nimport './updatePasswordForm.scss'\r\n\r\ntype Values = {\r\n  oldPassword: string\r\n  newPassword: string\r\n}\r\ntype Params = {\r\n  userId: string\r\n}\r\nconst UpdatePasswordSchema = Yup.object().shape({\r\n  oldPassword: Yup.string()\r\n    .min(8, 'Minimum 8 characters')\r\n    .required('Required!'),\r\n  newPassword: Yup.string()\r\n    .min(8, 'Minimum 8 characters')\r\n    .required('Required!'),\r\n})\r\nconst UpdatePasswordForm = () => {\r\n  const { userId } = useParams<Params>()\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <div className=\"personal__form\">\r\n      <div className=\"form__title personal__form__title\">change password </div>\r\n      <Formik\r\n        initialValues={{\r\n          oldPassword: '',\r\n          newPassword: '',\r\n        }}\r\n        validationSchema={UpdatePasswordSchema}\r\n        onSubmit={async (\r\n          values: Values,\r\n          { setSubmitting }: FormikHelpers<Values>\r\n        ) => {\r\n          const { oldPassword, newPassword } = values\r\n          dispatch(updateUserPassword(userId, oldPassword, newPassword))\r\n          alert('Your password is updated')\r\n          setSubmitting(false)\r\n        }}\r\n      >\r\n        {({ isSubmitting, errors, touched }) => (\r\n          <Form className=\"form__content personal__form__content\">\r\n            <label htmlFor=\"oldPassword\" className=\"form__content__label\">\r\n              Current password\r\n            </label>\r\n            <Field\r\n              required\r\n              type=\"password\"\r\n              id=\"oldPassword\"\r\n              name=\"oldPassword\"\r\n              placeholder=\"Your current password\"\r\n              className=\"form__content__input\"\r\n            />\r\n            {errors.oldPassword && touched.oldPassword ? (\r\n              <div className=\"form__content__error\">{errors.oldPassword}</div>\r\n            ) : null}\r\n            <label htmlFor=\"newPassword\" className=\"form__content__label\">\r\n              New password\r\n            </label>\r\n            <Field\r\n              required\r\n              type=\"password\"\r\n              id=\"newPassword\"\r\n              name=\"newPassword\"\r\n              placeholder=\"Your new password\"\r\n              className=\"form__content__input\"\r\n            />\r\n            {errors.newPassword && touched.newPassword ? (\r\n              <div className=\"form__content__error\">{errors.newPassword}</div>\r\n            ) : null}\r\n            <button\r\n              type=\"submit\"\r\n              className=\"form__content__submit-btn\"\r\n              disabled={isSubmitting}\r\n            >\r\n              Update your password\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdatePasswordForm\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { AppState } from '../../types'\r\nimport Header from '../../components/Header/index'\r\nimport UserAccountNavigation from '../../components/UserAccountNavigation/index'\r\nimport UserDataForm from '../../components/UserDataForm/index'\r\nimport UpdatePasswordForm from '../../components/UpdatePasswordForm/index'\r\nimport './userProfile.scss'\r\n\r\nfunction UserProfile() {\r\n  const user = useSelector((state: AppState) => state.auth.user)\r\n\r\n  return (\r\n    <div className=\"profile__wrapper\">\r\n      <Header />\r\n      <div className=\"profile__content\">\r\n        <h1>MY ACCOUNT</h1>\r\n        <hr />\r\n        <div className=\"account__container\">\r\n          <UserAccountNavigation />\r\n          <div className=\"account__form-wrapper\">\r\n            <UserDataForm />\r\n            {!user?.google && <UpdatePasswordForm />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserProfile\r\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Formik, Field, Form, FormikHelpers, FieldArray } from 'formik'\n\nimport { AppState } from '../../types'\nimport { adminCreateProduct } from '../../redux/actions/product'\nimport AddProductSchema from './validate'\nimport './addProductForm.scss'\n\ntype Values = {\n  productName: string\n  price: number\n  images: string[]\n  affiliateurl: string\n  asin: string\n  description: string\n  category: string\n  variants: string[]\n  size: string | number\n}\n\nconst AddProductForm = () => {\n  const dispatch = useDispatch()\n  const isLoggedIn = useSelector((state: AppState) => state.auth.isLoggedIn)\n\n  return (\n    <div className=\"\">\n      <div className=\"form__title add-product__form__title\">\n        add new product\n      </div>\n      {isLoggedIn && (\n        <Formik\n          initialValues={{\n            productName: '',\n            price: 10,\n            images: [''],\n            affiliateurl: '',\n            asin: '',\n            description: '',\n            category: '',\n            variants: [''],\n            size: '',\n          }}\n          validationSchema={AddProductSchema}\n          onSubmit={async (\n            values,\n            { setSubmitting, resetForm }: FormikHelpers<Values>\n          ) => {\n            const {\n              productName,\n              price,\n              images,\n              affiliateurl,\n              asin,\n              description,\n              category,\n              variants,\n              size,\n            } = values\n            dispatch(\n              adminCreateProduct(\n                productName,\n                price,\n                images,\n                affiliateurl,\n                asin,\n                description,\n                category,\n                variants,\n                size\n              )\n            )\n            alert('New product is added')\n            setSubmitting(false)\n            resetForm()\n          }}\n        >\n          {({ isSubmitting, values, errors, touched }) => (\n            <Form className=\"form__content add-product__form__content\">\n              <label htmlFor=\"productName\" className=\"form__content__label\">\n                *Name:\n              </label>\n              <Field\n                required\n                id=\"productName\"\n                placeholder=\"V-neck shirt\"\n                name=\"productName\"\n                className=\"form__content__input\"\n              />\n              {errors.productName && touched.productName ? (\n                <div className=\"form__content__error\">{errors.productName}</div>\n              ) : null}\n              <label htmlFor=\"price\" className=\"form__content__label\">\n                *Price <span>(e)</span>:\n              </label>\n              <Field\n                required\n                type=\"number\"\n                id=\"price\"\n                name=\"price\"\n                className=\"form__content__input\"\n              />\n              {errors.price && touched.price ? (\n                <div className=\"form__content__error\">{errors.price}</div>\n              ) : null}\n              <label htmlFor=\"images\" className=\"form__content__label\">\n                *Images (links):\n              </label>\n              <FieldArray name=\"images\">\n                {({ insert, remove, push }) => (\n                  <div>\n                    {values.images.length > 0 &&\n                      values.images.map((image, index) => (\n                        <div className=\"row\" key={index}>\n                          <div className=\"col\">\n                            {/* <label htmlFor={`friends.${index}`}>Name</label> */}\n                            <Field\n                              required\n                              name={`images.${index}`}\n                              placeholder=\"https://imgur.com/O4osup3\"\n                              type=\"text\"\n                              className=\"add-product__form__imgUrl\"\n                            />\n                          </div>\n                          <div className=\"col\">\n                            <button type=\"button\" onClick={() => remove(index)}>\n                              X\n                            </button>\n                          </div>\n                        </div>\n                      ))}\n                    <button type=\"button\" onClick={() => push('')}>\n                      Add link\n                    </button>\n                  </div>\n                )}\n              </FieldArray>\n              {errors.images && touched.images ? (\n                <div className=\"form__content__error\">{errors.images}</div>\n              ) : null}\n              <label htmlFor=\"affiliateurl\" className=\"form_content_label\">\n                AffiliateUrl:\n              </label>\n              <Field\n                id=\"affiliateurl\"\n                name=\"affiliateurl\"\n                className=\"form__content__input\"\n              />\n              {errors.affiliateurl && touched.affiliateurl ? (\n                <div className=\"form__content__error\">\n                  {errors.affiliateurl}\n                </div>\n              ) : null}\n              <label htmlFor=\"asin\" className=\"form_content_label\">\n                ASIN:\n              </label>\n              <Field id=\"asin\" name=\"asin\" className=\"form__content__input\" />\n              {errors.asin && touched.asin ? (\n                <div className=\"form__content__error\">{errors.asin}</div>\n              ) : null}\n\n              <label htmlFor=\"description\" className=\"form__content__label\">\n                Description:\n              </label>\n              <Field\n                id=\"description\"\n                name=\"description\"\n                className=\"form__content__input\"\n              />\n              {errors.description && touched.description ? (\n                <div className=\"form__content__error\">{errors.description}</div>\n              ) : null}\n              <label htmlFor=\"category\" className=\"form__content__label\">\n                *Category:\n              </label>\n              <Field\n                required\n                id=\"category\"\n                name=\"category\"\n                className=\"form__content__input\"\n              />\n              {errors.category && touched.category ? (\n                <div className=\"form__content__error\">{errors.category}</div>\n              ) : null}\n              <label htmlFor=\"variants\" className=\"form__content__label\">\n                Variants:\n              </label>\n              <FieldArray name=\"variants\">\n                {({ insert, remove, push }) => (\n                  <div>\n                    {values.variants.length > 0 &&\n                      values.variants.map((variant, index) => (\n                        <div className=\"row\" key={index}>\n                          <div className=\"col\">\n                            {/* <label htmlFor={`friends.${index}`}>Name</label> */}\n                            <Field\n                              name={`variants.${index}`}\n                              placeholder=\"cotton\"\n                              type=\"text\"\n                            />\n                          </div>\n                          <div className=\"col\">\n                            <button type=\"button\" onClick={() => remove(index)}>\n                              X\n                            </button>\n                          </div>\n                        </div>\n                      ))}\n                    <button type=\"button\" onClick={() => push('')}>\n                      Add variant\n                    </button>\n                  </div>\n                )}\n              </FieldArray>\n              {errors.variants && touched.variants ? (\n                <div className=\"form__content__error\">{errors.variants}</div>\n              ) : null}\n              <label htmlFor=\"size\" className=\"form__content__label\">\n                *Size:\n              </label>\n              <Field\n                required\n                id=\"size\"\n                name=\"size\"\n                className=\"form__content__input\"\n              />\n              {errors.size && touched.size ? (\n                <div className=\"form__content__error\">{errors.size}</div>\n              ) : null}\n              <button\n                type=\"submit\"\n                className=\"form__content__submit-btn\"\n                disabled={isSubmitting}\n              >\n                Add\n              </button>\n            </Form>\n          )}\n        </Formik>\n      )}\n    </div>\n  )\n}\n\nexport default AddProductForm\n","import React from 'react'\r\n\r\nimport Header from '../../components/Header/index'\r\nimport UserAccountNavigation from '../../components/UserAccountNavigation/index'\r\nimport AddProductForm from '../../components/AddProductForm/index'\r\nimport './addProduct.scss'\r\n\r\nfunction AddProduct() {\r\n  return (\r\n    <div className=\"profile__wrapper\">\r\n      <Header />\r\n      <div className=\"profile__content\">\r\n        <h1>ADD NEW PRODUCT</h1>\r\n        <hr />\r\n        <div className=\"account__container\">\r\n          <UserAccountNavigation />\r\n          <div className=\"account__form-wrapper\">\r\n            <AddProductForm />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddProduct\r\n","import React from 'react'\r\nimport { HashRouter, Switch, Route } from 'react-router-dom'\r\n\r\nimport Home from './pages/Home/index'\r\nimport Auth from './pages/Auth/index'\r\nimport ForgotPassword from './pages/ForgotPassword/index'\r\nimport ResetPassword from './pages/ResetPassword/index'\r\nimport Callback from './pages/Callback/index'\r\nimport Cart from './pages/Cart/index'\r\nimport Product from './pages/Product/index'\r\nimport UpdateProduct from './pages/UpdateProduct/index'\r\nimport UserProfile from './pages/UserProfile/index'\r\nimport AddProduct from './pages/AddProduct/index'\r\n\r\nconst Routes = () => (\r\n  <HashRouter basename=\"/\">\r\n    <Switch>\r\n      <Route\r\n        exact\r\n        path=\"/\"\r\n        render={(props) => <Home {...props} title=\"AllandWell ecommerce\" />}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/newin\"\r\n        render={(props) => <Home {...props} title=\"NEW IN\" />}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/women\"\r\n        render={(props) => <Home {...props} title=\"WOMEN\" />}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/men\"\r\n        render={(props) => <Home {...props} title=\"MEN\" />}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/kids\"\r\n        render={(props) => <Home {...props} title=\"KIDS\" />}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/auth\"\r\n        render={(props) => <Auth {...props} title=\"LOGIN/CREATE NEW ACCOUNT\" />}/>\r\n      <Route exact path=\"/auth/forgot-password\" component={ForgotPassword} />\r\n      <Route exact path=\"/auth/reset-password/:token\" component={ResetPassword} />\r\n      <Route exact path=\"/auth/callback/:token\" component={Callback} />\r\n      <Route\r\n        exact\r\n        path=\"/checkout/cart\"\r\n        render={(props) => <Cart {...props} title=\"SHOPPING CART\" />}\r\n      />\r\n      <Route exact path=\"/products/:productId\" component={Product} />\r\n      <Route exact path=\"/products/update/:productId\" component={UpdateProduct} />\r\n      <Route exact path=\"/user/:userId\" component={UserProfile} />\r\n      <Route exact path=\"/admin/addnewproduct\" component={AddProduct} />\r\n    </Switch>\r\n  </HashRouter>\r\n)\r\nexport default Routes\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { StylesProvider } from '@material-ui/core/styles'\r\n\r\nimport Routes from './Routes'\r\nimport { userAuthenticate } from './redux/actions/auth'\r\nimport { getAllItemsFromLocalStorage } from './redux/actions/local'\r\nimport './style/app.scss'\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(userAuthenticate())\r\n    dispatch(getAllItemsFromLocalStorage())\r\n  }, [dispatch])\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <div className=\"app-wrapper\">\r\n        <Routes />\r\n      </div>\r\n    </StylesProvider>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import {\r\n  ProductState,\r\n  ProductActions,\r\n  GET_ALL_PRODUCTS,\r\n  GET_ALL_PRODUCTS_BY_NAME_SUCCESS,\r\n  FIND_PRODUCT_BY_CATEGORY_SUCCESS,\r\n  CREATE_PRODUCT_SUCCESS,\r\n  DELETE_PRODUCT_SUCCESS,\r\n  UPDATE_PRODUCT_SUCCESS,\r\n} from '../../types'\r\n\r\nexport default function product(\r\n  state: ProductState = {\r\n    items: [],\r\n  },\r\n  action: ProductActions\r\n): ProductState {\r\n  switch (action.type) {\r\n    case GET_ALL_PRODUCTS: {\r\n      const { products } = action.payload\r\n      if (products) {\r\n        return { ...state, items: products }\r\n      }\r\n      return state\r\n    }\r\n    case GET_ALL_PRODUCTS_BY_NAME_SUCCESS: {\r\n      const { products } = action.payload\r\n      if (products) {\r\n        return { ...state, items: products }\r\n      }\r\n      return state\r\n    }\r\n    case FIND_PRODUCT_BY_CATEGORY_SUCCESS: {\r\n      const { products } = action.payload\r\n      if (products) {\r\n        return { ...state, items: products }\r\n      }\r\n      return state\r\n    }\r\n    case CREATE_PRODUCT_SUCCESS: {\r\n      const { product } = action.payload\r\n      if (product) {\r\n        return { ...state, items: [...state.items, product] }\r\n      }\r\n      return state\r\n    }\r\n    case UPDATE_PRODUCT_SUCCESS: {\r\n      const { product } = action.payload\r\n      const copyItems = [...state.items]\r\n      const filterItems = copyItems.filter((p) => p._id !== product._id)\r\n      if (product) {\r\n        return { ...state, items: [...filterItems, product] }\r\n      }\r\n      return state\r\n    }\r\n    case DELETE_PRODUCT_SUCCESS: {\r\n      const { product } = action.payload\r\n      const index = state.items.findIndex((p) => p._id === product._id)\r\n      if (index >= 0) {\r\n        state.items.splice(index, 1)\r\n        return { ...state, items: [...state.items] }\r\n      }\r\n      return state\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { TOGGLE_DIALOG, UiState, UiActions } from '../../types'\r\n\r\nconst defaultState: UiState = {\r\n  dialogOpen: {},\r\n}\r\n\r\nexport default function ui(\r\n  state: UiState = defaultState,\r\n  action: UiActions\r\n): UiState {\r\n  switch (action.type) {\r\n  case TOGGLE_DIALOG: {\r\n    return {\r\n      ...state,\r\n      dialogOpen: {\r\n        ...state.dialogOpen,\r\n        [action.payload.dialog]: !state.dialogOpen[action.payload.dialog],\r\n      },\r\n    }\r\n  }\r\n\r\n  default:\r\n    return state\r\n  }\r\n}\r\n","import {\r\n  AuthState,\r\n  UserActions,\r\n  REGISTER_SUCCESS,\r\n  LOGIN_SUCCESS,\r\n  AUTHENTICATE_SUCCESS,\r\n  AUTHENTICATE_FAILURE,\r\n  LOGOUT_SUCCESS,\r\n  UPATE_PROFILE_SUCCESS,\r\n  UPDATE_PASSWORD_SUCCESS,\r\n  ADD_ITEM_TO_CART_SUCCESS,\r\n  DECREASE_ITEM_QUANTITY_FROM_CART_SUCCESS,\r\n  REMOVE_ITEM_FROM_CART_SUCCESS,\r\n  GET_USER_WITH_ITEMS_POPULATE_SUCCESS,\r\n  REQUEST_FORGOT_PASSWORD_SUCCESS,\r\n  RESET_PASSWORD_SUCCESS,\r\n} from '../../types'\r\n\r\nexport default function auth(\r\n  state: AuthState = {\r\n    isLoggedIn: false,\r\n    user: null,\r\n    error: null,\r\n  },\r\n  action: UserActions\r\n): AuthState {\r\n  switch (action.type) {\r\n  case REGISTER_SUCCESS: {\r\n    const { user } = action.payload\r\n    return { ...state, isLoggedIn: true, user: user }\r\n  }\r\n  case LOGIN_SUCCESS: {\r\n    const { user } = action.payload\r\n    return { ...state, isLoggedIn: true, user: user }\r\n  }\r\n  case AUTHENTICATE_SUCCESS: {\r\n    const { user } = action.payload\r\n    return { ...state, isLoggedIn: true, user: user }\r\n  }\r\n  case AUTHENTICATE_FAILURE: {\r\n    const { error } = action.payload\r\n    return { ...state, isLoggedIn: false, error: error }\r\n  }\r\n  case LOGOUT_SUCCESS: {\r\n    return { ...state, isLoggedIn: false, user: null, error: null }\r\n  }\r\n  case UPATE_PROFILE_SUCCESS: {\r\n    const { user } = action.payload\r\n    return { ...state, user: user }\r\n  }\r\n  case UPDATE_PASSWORD_SUCCESS: {\r\n    return { ...state }\r\n  }\r\n  case ADD_ITEM_TO_CART_SUCCESS: {\r\n    const { user } = action.payload\r\n    if (user) {\r\n      return { ...state, user: user }\r\n    }\r\n    return state\r\n  }\r\n  case REMOVE_ITEM_FROM_CART_SUCCESS: {\r\n    const { user } = action.payload\r\n    if (user) {\r\n      return { ...state, user: user }\r\n    }\r\n    return state\r\n  }\r\n  case DECREASE_ITEM_QUANTITY_FROM_CART_SUCCESS: {\r\n    const { user } = action.payload\r\n    if (user) {\r\n      return { ...state, user: user }\r\n    }\r\n    return state\r\n  }\r\n  case GET_USER_WITH_ITEMS_POPULATE_SUCCESS: {\r\n    const { user } = action.payload\r\n    if (user) {\r\n      return { ...state, user: user }\r\n    }\r\n    return state\r\n  }\r\n  case REQUEST_FORGOT_PASSWORD_SUCCESS: {\r\n    return state\r\n  }\r\n  case RESET_PASSWORD_SUCCESS: {\r\n    return state\r\n  }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n","import {\r\n  LocalState,\r\n  LocalActions,\r\n  GET_ALL_ITEMS_FROM_CART_LOCAL,\r\n} from '../../types'\r\n  \r\nexport default function local(\r\n  state: LocalState = {\r\n    itemsInCart: []\r\n  },\r\n  action: LocalActions\r\n): LocalState {\r\n  switch (action.type) {\r\n  case GET_ALL_ITEMS_FROM_CART_LOCAL: {\r\n    const { itemsInCart } = action.payload\r\n    if (itemsInCart) {\r\n      return { ...state, itemsInCart: itemsInCart}\r\n    }\r\n    return state\r\n  }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n  \r\n\r\n  ","import { combineReducers } from 'redux'\r\n\r\nimport product from './product'\r\nimport ui from './ui'\r\nimport auth from './auth'\r\nimport local from './local'\r\n\r\nconst createRootReducer = () =>\r\n  combineReducers({\r\n    product,\r\n    ui,\r\n    auth,\r\n    local\r\n  })\r\n\r\nexport default createRootReducer\r\n","import { takeLatest } from 'redux-saga/effects'\r\n\r\nimport { GET_ALL_PRODUCTS, GetAllProductAction } from '../../types'\r\n\r\nfunction* doSomethingWhenGettingProduct(action: GetAllProductAction) {\r\n  yield console.log(action)\r\n}\r\n\r\nexport default [takeLatest(GET_ALL_PRODUCTS, doSomethingWhenGettingProduct)]\r\n","import { takeLatest } from 'redux-saga/effects'\r\n\r\nimport { TOGGLE_DIALOG, ToggleDialogAction } from '../../types'\r\n\r\nfunction* doSomethingWhenDialogOpen(action: ToggleDialogAction) {\r\n  yield console.log(action)\r\n}\r\n\r\nexport default [takeLatest(TOGGLE_DIALOG, doSomethingWhenDialogOpen)]\r\n","import { all } from 'redux-saga/effects'\r\n\r\nimport productSagas from './product'\r\nimport uiSagas from './ui'\r\n\r\nexport default function* rootSaga() {\r\n  yield all([...productSagas, ...uiSagas])\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { AppState } from '../types'\r\nimport createRootReducer from './reducers'\r\nimport rootSaga from './sagas'\r\n\r\nconst initState: AppState = {\r\n  local: {\r\n    itemsInCart: [],\r\n  },\r\n  auth: {\r\n    isLoggedIn: false,\r\n    user: null,\r\n    error: null,\r\n  },\r\n  product: {\r\n    items: [],\r\n  },\r\n  ui: {\r\n    dialogOpen: {},\r\n  },\r\n}\r\n\r\nexport default function makeStore(initialState = initState) {\r\n  const sagaMiddleware = createSagaMiddleware()\r\n  const middlewares = [sagaMiddleware, thunk]\r\n  let composeEnhancers = compose\r\n\r\n  if (process.env.NODE_ENV === 'development') {\r\n    if ((window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\r\n      composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    }\r\n  }\r\n\r\n  const store = createStore(\r\n    createRootReducer(),\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(...middlewares))\r\n  )\r\n\r\n  sagaMiddleware.run(rootSaga)\r\n\r\n  if ((module as any).hot) {\r\n    ;(module as any).hot.accept('./reducers', () => {\r\n      const nextReducer = require('./reducers').default\r\n      store.replaceReducer(nextReducer)\r\n    })\r\n  }\r\n\r\n  return store\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport makeStore from './redux/store'\r\n\r\nconst store = makeStore()\r\n\r\nconst WithProvider = () => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(<WithProvider />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}